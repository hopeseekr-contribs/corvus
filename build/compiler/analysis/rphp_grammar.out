State 0:
          module ::= * statement_list
      (1) statement_list ::= *
          statement_list ::= * statement_list statement

                        module accept
                statement_list shift  1
                     {default} reduce 1

State 1:
      (0) module ::= statement_list *
          statement_list ::= statement_list * statement
          statement ::= * statementBlock
          statement ::= * inlineHTML
          statement ::= * functionDecl
          statement ::= * classDecl
          statement ::= * ifBlock
          statement ::= * forEach
          statement ::= * forStmt
          statement ::= * doStmt
          statement ::= * whileStmt
          statement ::= * switchStmt
          statement ::= * tryCatch
          statement ::= * staticDecl T_SEMI
          statement ::= * echo T_SEMI
          statement ::= * throw T_SEMI
          statement ::= * expr T_SEMI
          statement ::= * return T_SEMI
          statement ::= * break T_SEMI
          statement ::= * continue T_SEMI
          statement ::= * global T_SEMI
          statement ::= * T_SEMI
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          echo ::= * T_ECHO commaExprList
          throw ::= * T_THROW expr
          return ::= * T_RETURN
          return ::= * T_RETURN expr
          break ::= * T_BREAK
          break ::= * T_BREAK expr
          continue ::= * T_CONTINUE
          continue ::= * T_CONTINUE expr
          global ::= * T_GLOBAL globalVarList
          inlineHTML ::= * T_INLINE_HTML
          tryCatch ::= * T_TRY statementBlock catch moreCatches
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          forStmt ::= * T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
          doStmt ::= * T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          whileStmt ::= * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement
          switchStmt ::= * T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList
          staticDecl ::= * T_STATIC staticVarList
          staticDecl ::= * T_STATIC staticVarList T_ASSIGN staticScalar
          functionDecl ::= * T_FUNCTION signature statementBlock
          classDecl ::= * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                             $ reduce 0
                   T_LEFTPAREN shift  35
                   T_LEFTCURLY shift  187
                 T_INLINE_HTML shift  495
                       T_WHILE shift  337
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                      T_GLOBAL shift  149
                    T_FUNCTION shift  162
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                       T_CLASS shift  351
                     T_FOREACH shift  330
                         T_FOR shift  331
                      T_RETURN shift  101
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                      T_SWITCH shift  338
                       T_BREAK shift  102
                    T_CONTINUE shift  103
                       T_CLONE shift  40
                         T_TRY shift  169
                       T_THROW shift  100
                      T_STATIC shift  174
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                   T_INTERFACE shift  370
                         T_NEW shift  127
                    T_ABSTRACT shift  367
                       T_FINAL shift  364
                        T_SEMI shift  488
                        T_ECHO shift  26
                    T_VARIABLE shift  158
                          T_IF shift  329
                          T_DO shift  7
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                     statement shift  378
                statementBlock shift  379
                    inlineHTML shift  380
                  functionDecl shift  381
                     classDecl shift  382
                       ifBlock shift  383
                       forEach shift  384
                       forStmt shift  385
                        doStmt shift  386
                     whileStmt shift  387
                    switchStmt shift  388
                      tryCatch shift  389
                    staticDecl shift  286
                          echo shift  287
                         throw shift  288
                          expr shift  196
                        return shift  319
                         break shift  320
                      continue shift  321
                        global shift  322
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 2:
          statement_list ::= statement_list * statement
          statement ::= * statementBlock
          statement ::= * inlineHTML
          statement ::= * functionDecl
          statement ::= * classDecl
          statement ::= * ifBlock
          statement ::= * forEach
          statement ::= * forStmt
          statement ::= * doStmt
          statement ::= * whileStmt
          statement ::= * switchStmt
          statement ::= * tryCatch
          statement ::= * staticDecl T_SEMI
          statement ::= * echo T_SEMI
          statement ::= * throw T_SEMI
          statement ::= * expr T_SEMI
          statement ::= * return T_SEMI
          statement ::= * break T_SEMI
          statement ::= * continue T_SEMI
          statement ::= * global T_SEMI
          statement ::= * T_SEMI
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          statementBlock ::= T_LEFTCURLY statement_list * T_RIGHTCURLY
          echo ::= * T_ECHO commaExprList
          throw ::= * T_THROW expr
          return ::= * T_RETURN
          return ::= * T_RETURN expr
          break ::= * T_BREAK
          break ::= * T_BREAK expr
          continue ::= * T_CONTINUE
          continue ::= * T_CONTINUE expr
          global ::= * T_GLOBAL globalVarList
          inlineHTML ::= * T_INLINE_HTML
          tryCatch ::= * T_TRY statementBlock catch moreCatches
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          forStmt ::= * T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
          doStmt ::= * T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          whileStmt ::= * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement
          switchStmt ::= * T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList
          staticDecl ::= * T_STATIC staticVarList
          staticDecl ::= * T_STATIC staticVarList T_ASSIGN staticScalar
          functionDecl ::= * T_FUNCTION signature statementBlock
          classDecl ::= * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                   T_LEFTCURLY shift  187
                  T_RIGHTCURLY shift  489
                 T_INLINE_HTML shift  495
                       T_WHILE shift  337
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                      T_GLOBAL shift  149
                    T_FUNCTION shift  162
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                       T_CLASS shift  351
                     T_FOREACH shift  330
                         T_FOR shift  331
                      T_RETURN shift  101
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                      T_SWITCH shift  338
                       T_BREAK shift  102
                    T_CONTINUE shift  103
                       T_CLONE shift  40
                         T_TRY shift  169
                       T_THROW shift  100
                      T_STATIC shift  174
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                   T_INTERFACE shift  370
                         T_NEW shift  127
                    T_ABSTRACT shift  367
                       T_FINAL shift  364
                        T_SEMI shift  488
                        T_ECHO shift  26
                    T_VARIABLE shift  158
                          T_IF shift  329
                          T_DO shift  7
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                     statement shift  378
                statementBlock shift  379
                    inlineHTML shift  380
                  functionDecl shift  381
                     classDecl shift  382
                       ifBlock shift  383
                       forEach shift  384
                       forStmt shift  385
                        doStmt shift  386
                     whileStmt shift  387
                    switchStmt shift  388
                      tryCatch shift  389
                    staticDecl shift  286
                          echo shift  287
                         throw shift  288
                          expr shift  196
                        return shift  319
                         break shift  320
                      continue shift  321
                        global shift  322
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 3:
          statement ::= * statementBlock
          statement ::= * inlineHTML
          statement ::= * functionDecl
          statement ::= * classDecl
          statement ::= * ifBlock
          statement ::= * forEach
          statement ::= * forStmt
          statement ::= * doStmt
          statement ::= * whileStmt
          statement ::= * switchStmt
          statement ::= * tryCatch
          statement ::= * staticDecl T_SEMI
          statement ::= * echo T_SEMI
          statement ::= * throw T_SEMI
          statement ::= * expr T_SEMI
          statement ::= * return T_SEMI
          statement ::= * break T_SEMI
          statement ::= * continue T_SEMI
          statement ::= * global T_SEMI
          statement ::= * T_SEMI
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          echo ::= * T_ECHO commaExprList
          throw ::= * T_THROW expr
          return ::= * T_RETURN
          return ::= * T_RETURN expr
          break ::= * T_BREAK
          break ::= * T_BREAK expr
          continue ::= * T_CONTINUE
          continue ::= * T_CONTINUE expr
          global ::= * T_GLOBAL globalVarList
          inlineHTML ::= * T_INLINE_HTML
          tryCatch ::= * T_TRY statementBlock catch moreCatches
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= T_IF T_LEFTPAREN expr T_RIGHTPAREN * statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          ifBlock ::= T_IF T_LEFTPAREN expr T_RIGHTPAREN * statement elseSingle
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          forStmt ::= * T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
          doStmt ::= * T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          whileStmt ::= * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement
          switchStmt ::= * T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList
          staticDecl ::= * T_STATIC staticVarList
          staticDecl ::= * T_STATIC staticVarList T_ASSIGN staticScalar
          functionDecl ::= * T_FUNCTION signature statementBlock
          classDecl ::= * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                   T_LEFTCURLY shift  187
                 T_INLINE_HTML shift  495
                       T_WHILE shift  337
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                      T_GLOBAL shift  149
                    T_FUNCTION shift  162
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                       T_CLASS shift  351
                     T_FOREACH shift  330
                         T_FOR shift  331
                      T_RETURN shift  101
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                      T_SWITCH shift  338
                       T_BREAK shift  102
                    T_CONTINUE shift  103
                       T_CLONE shift  40
                         T_TRY shift  169
                       T_THROW shift  100
                      T_STATIC shift  174
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                   T_INTERFACE shift  370
                         T_NEW shift  127
                    T_ABSTRACT shift  367
                       T_FINAL shift  364
                        T_SEMI shift  488
                        T_ECHO shift  26
                    T_VARIABLE shift  158
                          T_IF shift  329
                          T_DO shift  7
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                     statement shift  150
                statementBlock shift  379
                    inlineHTML shift  380
                  functionDecl shift  381
                     classDecl shift  382
                       ifBlock shift  383
                       forEach shift  384
                       forStmt shift  385
                        doStmt shift  386
                     whileStmt shift  387
                    switchStmt shift  388
                      tryCatch shift  389
                    staticDecl shift  286
                          echo shift  287
                         throw shift  288
                          expr shift  196
                        return shift  319
                         break shift  320
                      continue shift  321
                        global shift  322
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 4:
          statement ::= * statementBlock
          statement ::= * inlineHTML
          statement ::= * functionDecl
          statement ::= * classDecl
          statement ::= * ifBlock
          statement ::= * forEach
          statement ::= * forStmt
          statement ::= * doStmt
          statement ::= * whileStmt
          statement ::= * switchStmt
          statement ::= * tryCatch
          statement ::= * staticDecl T_SEMI
          statement ::= * echo T_SEMI
          statement ::= * throw T_SEMI
          statement ::= * expr T_SEMI
          statement ::= * return T_SEMI
          statement ::= * break T_SEMI
          statement ::= * continue T_SEMI
          statement ::= * global T_SEMI
          statement ::= * T_SEMI
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          echo ::= * T_ECHO commaExprList
          throw ::= * T_THROW expr
          return ::= * T_RETURN
          return ::= * T_RETURN expr
          break ::= * T_BREAK
          break ::= * T_BREAK expr
          continue ::= * T_CONTINUE
          continue ::= * T_CONTINUE expr
          global ::= * T_GLOBAL globalVarList
          inlineHTML ::= * T_INLINE_HTML
          tryCatch ::= * T_TRY statementBlock catch moreCatches
          elseSingle ::= T_ELSE * statement
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          forStmt ::= * T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
          doStmt ::= * T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          whileStmt ::= * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement
          switchStmt ::= * T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList
          staticDecl ::= * T_STATIC staticVarList
          staticDecl ::= * T_STATIC staticVarList T_ASSIGN staticScalar
          functionDecl ::= * T_FUNCTION signature statementBlock
          classDecl ::= * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                   T_LEFTCURLY shift  187
                 T_INLINE_HTML shift  495
                       T_WHILE shift  337
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                      T_GLOBAL shift  149
                    T_FUNCTION shift  162
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                       T_CLASS shift  351
                     T_FOREACH shift  330
                         T_FOR shift  331
                      T_RETURN shift  101
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                      T_SWITCH shift  338
                       T_BREAK shift  102
                    T_CONTINUE shift  103
                       T_CLONE shift  40
                         T_TRY shift  169
                       T_THROW shift  100
                      T_STATIC shift  174
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                   T_INTERFACE shift  370
                         T_NEW shift  127
                    T_ABSTRACT shift  367
                       T_FINAL shift  364
                        T_SEMI shift  488
                        T_ECHO shift  26
                    T_VARIABLE shift  158
                          T_IF shift  329
                          T_DO shift  7
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                     statement shift  500
                statementBlock shift  379
                    inlineHTML shift  380
                  functionDecl shift  381
                     classDecl shift  382
                       ifBlock shift  383
                       forEach shift  384
                       forStmt shift  385
                        doStmt shift  386
                     whileStmt shift  387
                    switchStmt shift  388
                      tryCatch shift  389
                    staticDecl shift  286
                          echo shift  287
                         throw shift  288
                          expr shift  196
                        return shift  319
                         break shift  320
                      continue shift  321
                        global shift  322
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 5:
          statement ::= * statementBlock
          statement ::= * inlineHTML
          statement ::= * functionDecl
          statement ::= * classDecl
          statement ::= * ifBlock
          statement ::= * forEach
          statement ::= * forStmt
          statement ::= * doStmt
          statement ::= * whileStmt
          statement ::= * switchStmt
          statement ::= * tryCatch
          statement ::= * staticDecl T_SEMI
          statement ::= * echo T_SEMI
          statement ::= * throw T_SEMI
          statement ::= * expr T_SEMI
          statement ::= * return T_SEMI
          statement ::= * break T_SEMI
          statement ::= * continue T_SEMI
          statement ::= * global T_SEMI
          statement ::= * T_SEMI
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          echo ::= * T_ECHO commaExprList
          throw ::= * T_THROW expr
          return ::= * T_RETURN
          return ::= * T_RETURN expr
          break ::= * T_BREAK
          break ::= * T_BREAK expr
          continue ::= * T_CONTINUE
          continue ::= * T_CONTINUE expr
          global ::= * T_GLOBAL globalVarList
          inlineHTML ::= * T_INLINE_HTML
          tryCatch ::= * T_TRY statementBlock catch moreCatches
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN * statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          forStmt ::= * T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
          doStmt ::= * T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          whileStmt ::= * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement
          switchStmt ::= * T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList
          staticDecl ::= * T_STATIC staticVarList
          staticDecl ::= * T_STATIC staticVarList T_ASSIGN staticScalar
          functionDecl ::= * T_FUNCTION signature statementBlock
          classDecl ::= * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                   T_LEFTCURLY shift  187
                 T_INLINE_HTML shift  495
                       T_WHILE shift  337
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                      T_GLOBAL shift  149
                    T_FUNCTION shift  162
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                       T_CLASS shift  351
                     T_FOREACH shift  330
                         T_FOR shift  331
                      T_RETURN shift  101
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                      T_SWITCH shift  338
                       T_BREAK shift  102
                    T_CONTINUE shift  103
                       T_CLONE shift  40
                         T_TRY shift  169
                       T_THROW shift  100
                      T_STATIC shift  174
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                   T_INTERFACE shift  370
                         T_NEW shift  127
                    T_ABSTRACT shift  367
                       T_FINAL shift  364
                        T_SEMI shift  488
                        T_ECHO shift  26
                    T_VARIABLE shift  158
                          T_IF shift  329
                          T_DO shift  7
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                     statement shift  501
                statementBlock shift  379
                    inlineHTML shift  380
                  functionDecl shift  381
                     classDecl shift  382
                       ifBlock shift  383
                       forEach shift  384
                       forStmt shift  385
                        doStmt shift  386
                     whileStmt shift  387
                    switchStmt shift  388
                      tryCatch shift  389
                    staticDecl shift  286
                          echo shift  287
                         throw shift  288
                          expr shift  196
                        return shift  319
                         break shift  320
                      continue shift  321
                        global shift  322
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 6:
          statement ::= * statementBlock
          statement ::= * inlineHTML
          statement ::= * functionDecl
          statement ::= * classDecl
          statement ::= * ifBlock
          statement ::= * forEach
          statement ::= * forStmt
          statement ::= * doStmt
          statement ::= * whileStmt
          statement ::= * switchStmt
          statement ::= * tryCatch
          statement ::= * staticDecl T_SEMI
          statement ::= * echo T_SEMI
          statement ::= * throw T_SEMI
          statement ::= * expr T_SEMI
          statement ::= * return T_SEMI
          statement ::= * break T_SEMI
          statement ::= * continue T_SEMI
          statement ::= * global T_SEMI
          statement ::= * T_SEMI
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          echo ::= * T_ECHO commaExprList
          throw ::= * T_THROW expr
          return ::= * T_RETURN
          return ::= * T_RETURN expr
          break ::= * T_BREAK
          break ::= * T_BREAK expr
          continue ::= * T_CONTINUE
          continue ::= * T_CONTINUE expr
          global ::= * T_GLOBAL globalVarList
          inlineHTML ::= * T_INLINE_HTML
          tryCatch ::= * T_TRY statementBlock catch moreCatches
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          forStmt ::= * T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
          forStmt ::= T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN * statement
          doStmt ::= * T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          whileStmt ::= * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement
          switchStmt ::= * T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList
          staticDecl ::= * T_STATIC staticVarList
          staticDecl ::= * T_STATIC staticVarList T_ASSIGN staticScalar
          functionDecl ::= * T_FUNCTION signature statementBlock
          classDecl ::= * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                   T_LEFTCURLY shift  187
                 T_INLINE_HTML shift  495
                       T_WHILE shift  337
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                      T_GLOBAL shift  149
                    T_FUNCTION shift  162
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                       T_CLASS shift  351
                     T_FOREACH shift  330
                         T_FOR shift  331
                      T_RETURN shift  101
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                      T_SWITCH shift  338
                       T_BREAK shift  102
                    T_CONTINUE shift  103
                       T_CLONE shift  40
                         T_TRY shift  169
                       T_THROW shift  100
                      T_STATIC shift  174
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                   T_INTERFACE shift  370
                         T_NEW shift  127
                    T_ABSTRACT shift  367
                       T_FINAL shift  364
                        T_SEMI shift  488
                        T_ECHO shift  26
                    T_VARIABLE shift  158
                          T_IF shift  329
                          T_DO shift  7
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                     statement shift  502
                statementBlock shift  379
                    inlineHTML shift  380
                  functionDecl shift  381
                     classDecl shift  382
                       ifBlock shift  383
                       forEach shift  384
                       forStmt shift  385
                        doStmt shift  386
                     whileStmt shift  387
                    switchStmt shift  388
                      tryCatch shift  389
                    staticDecl shift  286
                          echo shift  287
                         throw shift  288
                          expr shift  196
                        return shift  319
                         break shift  320
                      continue shift  321
                        global shift  322
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 7:
          statement ::= * statementBlock
          statement ::= * inlineHTML
          statement ::= * functionDecl
          statement ::= * classDecl
          statement ::= * ifBlock
          statement ::= * forEach
          statement ::= * forStmt
          statement ::= * doStmt
          statement ::= * whileStmt
          statement ::= * switchStmt
          statement ::= * tryCatch
          statement ::= * staticDecl T_SEMI
          statement ::= * echo T_SEMI
          statement ::= * throw T_SEMI
          statement ::= * expr T_SEMI
          statement ::= * return T_SEMI
          statement ::= * break T_SEMI
          statement ::= * continue T_SEMI
          statement ::= * global T_SEMI
          statement ::= * T_SEMI
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          echo ::= * T_ECHO commaExprList
          throw ::= * T_THROW expr
          return ::= * T_RETURN
          return ::= * T_RETURN expr
          break ::= * T_BREAK
          break ::= * T_BREAK expr
          continue ::= * T_CONTINUE
          continue ::= * T_CONTINUE expr
          global ::= * T_GLOBAL globalVarList
          inlineHTML ::= * T_INLINE_HTML
          tryCatch ::= * T_TRY statementBlock catch moreCatches
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          forStmt ::= * T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
          doStmt ::= * T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          doStmt ::= T_DO * statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          whileStmt ::= * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement
          switchStmt ::= * T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList
          staticDecl ::= * T_STATIC staticVarList
          staticDecl ::= * T_STATIC staticVarList T_ASSIGN staticScalar
          functionDecl ::= * T_FUNCTION signature statementBlock
          classDecl ::= * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                   T_LEFTCURLY shift  187
                 T_INLINE_HTML shift  495
                       T_WHILE shift  337
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                      T_GLOBAL shift  149
                    T_FUNCTION shift  162
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                       T_CLASS shift  351
                     T_FOREACH shift  330
                         T_FOR shift  331
                      T_RETURN shift  101
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                      T_SWITCH shift  338
                       T_BREAK shift  102
                    T_CONTINUE shift  103
                       T_CLONE shift  40
                         T_TRY shift  169
                       T_THROW shift  100
                      T_STATIC shift  174
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                   T_INTERFACE shift  370
                         T_NEW shift  127
                    T_ABSTRACT shift  367
                       T_FINAL shift  364
                        T_SEMI shift  488
                        T_ECHO shift  26
                    T_VARIABLE shift  158
                          T_IF shift  329
                          T_DO shift  7
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                     statement shift  335
                statementBlock shift  379
                    inlineHTML shift  380
                  functionDecl shift  381
                     classDecl shift  382
                       ifBlock shift  383
                       forEach shift  384
                       forStmt shift  385
                        doStmt shift  386
                     whileStmt shift  387
                    switchStmt shift  388
                      tryCatch shift  389
                    staticDecl shift  286
                          echo shift  287
                         throw shift  288
                          expr shift  196
                        return shift  319
                         break shift  320
                      continue shift  321
                        global shift  322
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 8:
          statement ::= * statementBlock
          statement ::= * inlineHTML
          statement ::= * functionDecl
          statement ::= * classDecl
          statement ::= * ifBlock
          statement ::= * forEach
          statement ::= * forStmt
          statement ::= * doStmt
          statement ::= * whileStmt
          statement ::= * switchStmt
          statement ::= * tryCatch
          statement ::= * staticDecl T_SEMI
          statement ::= * echo T_SEMI
          statement ::= * throw T_SEMI
          statement ::= * expr T_SEMI
          statement ::= * return T_SEMI
          statement ::= * break T_SEMI
          statement ::= * continue T_SEMI
          statement ::= * global T_SEMI
          statement ::= * T_SEMI
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          echo ::= * T_ECHO commaExprList
          throw ::= * T_THROW expr
          return ::= * T_RETURN
          return ::= * T_RETURN expr
          break ::= * T_BREAK
          break ::= * T_BREAK expr
          continue ::= * T_CONTINUE
          continue ::= * T_CONTINUE expr
          global ::= * T_GLOBAL globalVarList
          inlineHTML ::= * T_INLINE_HTML
          tryCatch ::= * T_TRY statementBlock catch moreCatches
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          forStmt ::= * T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
          doStmt ::= * T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          whileStmt ::= * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement
          whileStmt ::= T_WHILE T_LEFTPAREN expr T_RIGHTPAREN * statement
          switchStmt ::= * T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList
          staticDecl ::= * T_STATIC staticVarList
          staticDecl ::= * T_STATIC staticVarList T_ASSIGN staticScalar
          functionDecl ::= * T_FUNCTION signature statementBlock
          classDecl ::= * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                   T_LEFTCURLY shift  187
                 T_INLINE_HTML shift  495
                       T_WHILE shift  337
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                      T_GLOBAL shift  149
                    T_FUNCTION shift  162
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                       T_CLASS shift  351
                     T_FOREACH shift  330
                         T_FOR shift  331
                      T_RETURN shift  101
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                      T_SWITCH shift  338
                       T_BREAK shift  102
                    T_CONTINUE shift  103
                       T_CLONE shift  40
                         T_TRY shift  169
                       T_THROW shift  100
                      T_STATIC shift  174
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                   T_INTERFACE shift  370
                         T_NEW shift  127
                    T_ABSTRACT shift  367
                       T_FINAL shift  364
                        T_SEMI shift  488
                        T_ECHO shift  26
                    T_VARIABLE shift  158
                          T_IF shift  329
                          T_DO shift  7
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                     statement shift  504
                statementBlock shift  379
                    inlineHTML shift  380
                  functionDecl shift  381
                     classDecl shift  382
                       ifBlock shift  383
                       forEach shift  384
                       forStmt shift  385
                        doStmt shift  386
                     whileStmt shift  387
                    switchStmt shift  388
                      tryCatch shift  389
                    staticDecl shift  286
                          echo shift  287
                         throw shift  288
                          expr shift  196
                        return shift  319
                         break shift  320
                      continue shift  321
                        global shift  322
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 9:
          statement_list ::= statement_list * statement
          statement ::= * statementBlock
          statement ::= * inlineHTML
          statement ::= * functionDecl
          statement ::= * classDecl
          statement ::= * ifBlock
          statement ::= * forEach
          statement ::= * forStmt
          statement ::= * doStmt
          statement ::= * whileStmt
          statement ::= * switchStmt
          statement ::= * tryCatch
          statement ::= * staticDecl T_SEMI
          statement ::= * echo T_SEMI
          statement ::= * throw T_SEMI
          statement ::= * expr T_SEMI
          statement ::= * return T_SEMI
          statement ::= * break T_SEMI
          statement ::= * continue T_SEMI
          statement ::= * global T_SEMI
          statement ::= * T_SEMI
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          echo ::= * T_ECHO commaExprList
          throw ::= * T_THROW expr
          return ::= * T_RETURN
          return ::= * T_RETURN expr
          break ::= * T_BREAK
          break ::= * T_BREAK expr
          continue ::= * T_CONTINUE
          continue ::= * T_CONTINUE expr
          global ::= * T_GLOBAL globalVarList
          inlineHTML ::= * T_INLINE_HTML
          tryCatch ::= * T_TRY statementBlock catch moreCatches
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          forStmt ::= * T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
          doStmt ::= * T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          whileStmt ::= * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement
          switchStmt ::= * T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList
     (61) caseList ::= caseList T_CASE expr caseSeparator statement_list *
          staticDecl ::= * T_STATIC staticVarList
          staticDecl ::= * T_STATIC staticVarList T_ASSIGN staticScalar
          functionDecl ::= * T_FUNCTION signature statementBlock
          classDecl ::= * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                   T_LEFTCURLY shift  187
                 T_INLINE_HTML shift  495
                       T_WHILE shift  337
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                      T_GLOBAL shift  149
                    T_FUNCTION shift  162
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                       T_CLASS shift  351
                     T_FOREACH shift  330
                         T_FOR shift  331
                      T_RETURN shift  101
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                      T_SWITCH shift  338
                       T_BREAK shift  102
                    T_CONTINUE shift  103
                       T_CLONE shift  40
                         T_TRY shift  169
                       T_THROW shift  100
                      T_STATIC shift  174
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                   T_INTERFACE shift  370
                         T_NEW shift  127
                    T_ABSTRACT shift  367
                       T_FINAL shift  364
                        T_SEMI shift  488
                        T_ECHO shift  26
                    T_VARIABLE shift  158
                          T_IF shift  329
                          T_DO shift  7
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                     statement shift  378
                statementBlock shift  379
                    inlineHTML shift  380
                  functionDecl shift  381
                     classDecl shift  382
                       ifBlock shift  383
                       forEach shift  384
                       forStmt shift  385
                        doStmt shift  386
                     whileStmt shift  387
                    switchStmt shift  388
                      tryCatch shift  389
                    staticDecl shift  286
                          echo shift  287
                         throw shift  288
                          expr shift  196
                        return shift  319
                         break shift  320
                      continue shift  321
                        global shift  322
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 61

State 10:
          statement_list ::= statement_list * statement
          statement ::= * statementBlock
          statement ::= * inlineHTML
          statement ::= * functionDecl
          statement ::= * classDecl
          statement ::= * ifBlock
          statement ::= * forEach
          statement ::= * forStmt
          statement ::= * doStmt
          statement ::= * whileStmt
          statement ::= * switchStmt
          statement ::= * tryCatch
          statement ::= * staticDecl T_SEMI
          statement ::= * echo T_SEMI
          statement ::= * throw T_SEMI
          statement ::= * expr T_SEMI
          statement ::= * return T_SEMI
          statement ::= * break T_SEMI
          statement ::= * continue T_SEMI
          statement ::= * global T_SEMI
          statement ::= * T_SEMI
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          echo ::= * T_ECHO commaExprList
          throw ::= * T_THROW expr
          return ::= * T_RETURN
          return ::= * T_RETURN expr
          break ::= * T_BREAK
          break ::= * T_BREAK expr
          continue ::= * T_CONTINUE
          continue ::= * T_CONTINUE expr
          global ::= * T_GLOBAL globalVarList
          inlineHTML ::= * T_INLINE_HTML
          tryCatch ::= * T_TRY statementBlock catch moreCatches
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          forStmt ::= * T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
          doStmt ::= * T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          whileStmt ::= * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement
          switchStmt ::= * T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList
     (62) caseList ::= caseList T_DEFAULT caseSeparator statement_list *
          staticDecl ::= * T_STATIC staticVarList
          staticDecl ::= * T_STATIC staticVarList T_ASSIGN staticScalar
          functionDecl ::= * T_FUNCTION signature statementBlock
          classDecl ::= * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                   T_LEFTCURLY shift  187
                 T_INLINE_HTML shift  495
                       T_WHILE shift  337
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                      T_GLOBAL shift  149
                    T_FUNCTION shift  162
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                       T_CLASS shift  351
                     T_FOREACH shift  330
                         T_FOR shift  331
                      T_RETURN shift  101
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                      T_SWITCH shift  338
                       T_BREAK shift  102
                    T_CONTINUE shift  103
                       T_CLONE shift  40
                         T_TRY shift  169
                       T_THROW shift  100
                      T_STATIC shift  174
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                   T_INTERFACE shift  370
                         T_NEW shift  127
                    T_ABSTRACT shift  367
                       T_FINAL shift  364
                        T_SEMI shift  488
                        T_ECHO shift  26
                    T_VARIABLE shift  158
                          T_IF shift  329
                          T_DO shift  7
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                     statement shift  378
                statementBlock shift  379
                    inlineHTML shift  380
                  functionDecl shift  381
                     classDecl shift  382
                       ifBlock shift  383
                       forEach shift  384
                       forStmt shift  385
                        doStmt shift  386
                     whileStmt shift  387
                    switchStmt shift  388
                      tryCatch shift  389
                    staticDecl shift  286
                          echo shift  287
                         throw shift  288
                          expr shift  196
                        return shift  319
                         break shift  320
                      continue shift  321
                        global shift  322
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 62

State 11:
          statement ::= * statementBlock
          statement ::= * inlineHTML
          statement ::= * functionDecl
          statement ::= * classDecl
          statement ::= * ifBlock
          statement ::= * forEach
          statement ::= * forStmt
          statement ::= * doStmt
          statement ::= * whileStmt
          statement ::= * switchStmt
          statement ::= * tryCatch
          statement ::= * staticDecl T_SEMI
          statement ::= * echo T_SEMI
          statement ::= * throw T_SEMI
          statement ::= * expr T_SEMI
          statement ::= * return T_SEMI
          statement ::= * break T_SEMI
          statement ::= * continue T_SEMI
          statement ::= * global T_SEMI
          statement ::= * T_SEMI
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          echo ::= * T_ECHO commaExprList
          throw ::= * T_THROW expr
          return ::= * T_RETURN
          return ::= * T_RETURN expr
          break ::= * T_BREAK
          break ::= * T_BREAK expr
          continue ::= * T_CONTINUE
          continue ::= * T_CONTINUE expr
          global ::= * T_GLOBAL globalVarList
          inlineHTML ::= * T_INLINE_HTML
          tryCatch ::= * T_TRY statementBlock catch moreCatches
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN * statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          forStmt ::= * T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
          doStmt ::= * T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          whileStmt ::= * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement
          switchStmt ::= * T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList
          staticDecl ::= * T_STATIC staticVarList
          staticDecl ::= * T_STATIC staticVarList T_ASSIGN staticScalar
          functionDecl ::= * T_FUNCTION signature statementBlock
          classDecl ::= * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                   T_LEFTCURLY shift  187
                 T_INLINE_HTML shift  495
                       T_WHILE shift  337
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                      T_GLOBAL shift  149
                    T_FUNCTION shift  162
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                       T_CLASS shift  351
                     T_FOREACH shift  330
                         T_FOR shift  331
                      T_RETURN shift  101
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                      T_SWITCH shift  338
                       T_BREAK shift  102
                    T_CONTINUE shift  103
                       T_CLONE shift  40
                         T_TRY shift  169
                       T_THROW shift  100
                      T_STATIC shift  174
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                   T_INTERFACE shift  370
                         T_NEW shift  127
                    T_ABSTRACT shift  367
                       T_FINAL shift  364
                        T_SEMI shift  488
                        T_ECHO shift  26
                    T_VARIABLE shift  158
                          T_IF shift  329
                          T_DO shift  7
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                     statement shift  555
                statementBlock shift  379
                    inlineHTML shift  380
                  functionDecl shift  381
                     classDecl shift  382
                       ifBlock shift  383
                       forEach shift  384
                       forStmt shift  385
                        doStmt shift  386
                     whileStmt shift  387
                    switchStmt shift  388
                      tryCatch shift  389
                    staticDecl shift  286
                          echo shift  287
                         throw shift  288
                          expr shift  196
                        return shift  319
                         break shift  320
                      continue shift  321
                        global shift  322
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 12:
          statement ::= * statementBlock
          statement ::= * inlineHTML
          statement ::= * functionDecl
          statement ::= * classDecl
          statement ::= * ifBlock
          statement ::= * forEach
          statement ::= * forStmt
          statement ::= * doStmt
          statement ::= * whileStmt
          statement ::= * switchStmt
          statement ::= * tryCatch
          statement ::= * staticDecl T_SEMI
          statement ::= * echo T_SEMI
          statement ::= * throw T_SEMI
          statement ::= * expr T_SEMI
          statement ::= * return T_SEMI
          statement ::= * break T_SEMI
          statement ::= * continue T_SEMI
          statement ::= * global T_SEMI
          statement ::= * T_SEMI
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          echo ::= * T_ECHO commaExprList
          throw ::= * T_THROW expr
          return ::= * T_RETURN
          return ::= * T_RETURN expr
          break ::= * T_BREAK
          break ::= * T_BREAK expr
          continue ::= * T_CONTINUE
          continue ::= * T_CONTINUE expr
          global ::= * T_GLOBAL globalVarList
          inlineHTML ::= * T_INLINE_HTML
          tryCatch ::= * T_TRY statementBlock catch moreCatches
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN * statement
          forStmt ::= * T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
          doStmt ::= * T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          whileStmt ::= * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement
          switchStmt ::= * T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList
          staticDecl ::= * T_STATIC staticVarList
          staticDecl ::= * T_STATIC staticVarList T_ASSIGN staticScalar
          functionDecl ::= * T_FUNCTION signature statementBlock
          classDecl ::= * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                   T_LEFTCURLY shift  187
                 T_INLINE_HTML shift  495
                       T_WHILE shift  337
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                      T_GLOBAL shift  149
                    T_FUNCTION shift  162
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                       T_CLASS shift  351
                     T_FOREACH shift  330
                         T_FOR shift  331
                      T_RETURN shift  101
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                      T_SWITCH shift  338
                       T_BREAK shift  102
                    T_CONTINUE shift  103
                       T_CLONE shift  40
                         T_TRY shift  169
                       T_THROW shift  100
                      T_STATIC shift  174
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                   T_INTERFACE shift  370
                         T_NEW shift  127
                    T_ABSTRACT shift  367
                       T_FINAL shift  364
                        T_SEMI shift  488
                        T_ECHO shift  26
                    T_VARIABLE shift  158
                          T_IF shift  329
                          T_DO shift  7
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                     statement shift  556
                statementBlock shift  379
                    inlineHTML shift  380
                  functionDecl shift  381
                     classDecl shift  382
                       ifBlock shift  383
                       forEach shift  384
                       forStmt shift  385
                        doStmt shift  386
                     whileStmt shift  387
                    switchStmt shift  388
                      tryCatch shift  389
                    staticDecl shift  286
                          echo shift  287
                         throw shift  288
                          expr shift  196
                        return shift  319
                         break shift  320
                      continue shift  321
                        global shift  322
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 13:
          statement ::= * statementBlock
          statement ::= * inlineHTML
          statement ::= * functionDecl
          statement ::= * classDecl
          statement ::= * ifBlock
          statement ::= * forEach
          statement ::= * forStmt
          statement ::= * doStmt
          statement ::= * whileStmt
          statement ::= * switchStmt
          statement ::= * tryCatch
          statement ::= * staticDecl T_SEMI
          statement ::= * echo T_SEMI
          statement ::= * throw T_SEMI
          statement ::= * expr T_SEMI
          statement ::= * return T_SEMI
          statement ::= * break T_SEMI
          statement ::= * continue T_SEMI
          statement ::= * global T_SEMI
          statement ::= * T_SEMI
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          echo ::= * T_ECHO commaExprList
          throw ::= * T_THROW expr
          return ::= * T_RETURN
          return ::= * T_RETURN expr
          break ::= * T_BREAK
          break ::= * T_BREAK expr
          continue ::= * T_CONTINUE
          continue ::= * T_CONTINUE expr
          global ::= * T_GLOBAL globalVarList
          inlineHTML ::= * T_INLINE_HTML
          tryCatch ::= * T_TRY statementBlock catch moreCatches
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN * statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          forStmt ::= * T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
          doStmt ::= * T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          whileStmt ::= * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement
          switchStmt ::= * T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList
          staticDecl ::= * T_STATIC staticVarList
          staticDecl ::= * T_STATIC staticVarList T_ASSIGN staticScalar
          functionDecl ::= * T_FUNCTION signature statementBlock
          classDecl ::= * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                   T_LEFTCURLY shift  187
                 T_INLINE_HTML shift  495
                       T_WHILE shift  337
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                      T_GLOBAL shift  149
                    T_FUNCTION shift  162
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                       T_CLASS shift  351
                     T_FOREACH shift  330
                         T_FOR shift  331
                      T_RETURN shift  101
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                      T_SWITCH shift  338
                       T_BREAK shift  102
                    T_CONTINUE shift  103
                       T_CLONE shift  40
                         T_TRY shift  169
                       T_THROW shift  100
                      T_STATIC shift  174
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                   T_INTERFACE shift  370
                         T_NEW shift  127
                    T_ABSTRACT shift  367
                       T_FINAL shift  364
                        T_SEMI shift  488
                        T_ECHO shift  26
                    T_VARIABLE shift  158
                          T_IF shift  329
                          T_DO shift  7
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                     statement shift  557
                statementBlock shift  379
                    inlineHTML shift  380
                  functionDecl shift  381
                     classDecl shift  382
                       ifBlock shift  383
                       forEach shift  384
                       forStmt shift  385
                        doStmt shift  386
                     whileStmt shift  387
                    switchStmt shift  388
                      tryCatch shift  389
                    staticDecl shift  286
                          echo shift  287
                         throw shift  288
                          expr shift  196
                        return shift  319
                         break shift  320
                      continue shift  321
                        global shift  322
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 14:
          statement ::= * statementBlock
          statement ::= * inlineHTML
          statement ::= * functionDecl
          statement ::= * classDecl
          statement ::= * ifBlock
          statement ::= * forEach
          statement ::= * forStmt
          statement ::= * doStmt
          statement ::= * whileStmt
          statement ::= * switchStmt
          statement ::= * tryCatch
          statement ::= * staticDecl T_SEMI
          statement ::= * echo T_SEMI
          statement ::= * throw T_SEMI
          statement ::= * expr T_SEMI
          statement ::= * return T_SEMI
          statement ::= * break T_SEMI
          statement ::= * continue T_SEMI
          statement ::= * global T_SEMI
          statement ::= * T_SEMI
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          echo ::= * T_ECHO commaExprList
          throw ::= * T_THROW expr
          return ::= * T_RETURN
          return ::= * T_RETURN expr
          break ::= * T_BREAK
          break ::= * T_BREAK expr
          continue ::= * T_CONTINUE
          continue ::= * T_CONTINUE expr
          global ::= * T_GLOBAL globalVarList
          inlineHTML ::= * T_INLINE_HTML
          tryCatch ::= * T_TRY statementBlock catch moreCatches
          elseSeries ::= T_ELSEIF T_LEFTPAREN expr T_RIGHTPAREN * statement elseSingle
          elseSeries ::= T_ELSEIF T_LEFTPAREN expr T_RIGHTPAREN * statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= * T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= * T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          forStmt ::= * T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
          doStmt ::= * T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN
          whileStmt ::= * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement
          switchStmt ::= * T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList
          staticDecl ::= * T_STATIC staticVarList
          staticDecl ::= * T_STATIC staticVarList T_ASSIGN staticScalar
          functionDecl ::= * T_FUNCTION signature statementBlock
          classDecl ::= * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
          classDecl ::= * T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                   T_LEFTCURLY shift  187
                 T_INLINE_HTML shift  495
                       T_WHILE shift  337
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                      T_GLOBAL shift  149
                    T_FUNCTION shift  162
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                       T_CLASS shift  351
                     T_FOREACH shift  330
                         T_FOR shift  331
                      T_RETURN shift  101
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                      T_SWITCH shift  338
                       T_BREAK shift  102
                    T_CONTINUE shift  103
                       T_CLONE shift  40
                         T_TRY shift  169
                       T_THROW shift  100
                      T_STATIC shift  174
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                   T_INTERFACE shift  370
                         T_NEW shift  127
                    T_ABSTRACT shift  367
                       T_FINAL shift  364
                        T_SEMI shift  488
                        T_ECHO shift  26
                    T_VARIABLE shift  158
                          T_IF shift  329
                          T_DO shift  7
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                     statement shift  153
                statementBlock shift  379
                    inlineHTML shift  380
                  functionDecl shift  381
                     classDecl shift  382
                       ifBlock shift  383
                       forEach shift  384
                       forStmt shift  385
                        doStmt shift  386
                     whileStmt shift  387
                    switchStmt shift  388
                      tryCatch shift  389
                    staticDecl shift  286
                          echo shift  287
                         throw shift  288
                          expr shift  196
                        return shift  319
                         break shift  320
                      continue shift  321
                        global shift  322
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 15:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
    (189) arrayItemList ::= *
          arrayItemList ::= * arrayItems maybeComma
          arrayItems ::= * expr
          arrayItems ::= * T_AND expr
          arrayItems ::= * expr T_ARROWKEY expr
          arrayItems ::= * expr T_ARROWKEY T_AND expr
          arrayItems ::= * arrayItems T_COMMA expr
          arrayItems ::= * arrayItems T_COMMA T_AND expr
          arrayItems ::= * arrayItems T_COMMA expr T_ARROWKEY expr
          arrayItems ::= * arrayItems T_COMMA expr T_ARROWKEY T_AND expr
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          literalArray ::= T_ARRAY T_LEFTPAREN * arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                         T_AND shift  95
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  200
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                 arrayItemList shift  312
                    arrayItems shift  168
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 189

State 16:
          forStmt ::= T_FOR T_LEFTPAREN * forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement
     (51) forExpr ::= *
          forExpr ::= * commaExprList
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          commaExprList ::= * expr
          commaExprList ::= * commaExprList T_COMMA expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  224
                 commaExprList shift  373
                           var shift  257
                       forExpr shift  332
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 51

State 17:
          forStmt ::= T_FOR T_LEFTPAREN forExpr T_SEMI * forExpr T_SEMI forExpr T_RIGHTPAREN statement
     (51) forExpr ::= *
          forExpr ::= * commaExprList
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          commaExprList ::= * expr
          commaExprList ::= * commaExprList T_COMMA expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  224
                 commaExprList shift  373
                           var shift  257
                       forExpr shift  333
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 51

State 18:
          forStmt ::= T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI * forExpr T_RIGHTPAREN statement
     (51) forExpr ::= *
          forExpr ::= * commaExprList
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          commaExprList ::= * expr
          commaExprList ::= * commaExprList T_COMMA expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  224
                 commaExprList shift  373
                           var shift  257
                       forExpr shift  334
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 51

State 19:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          maybeMethodInvoke ::= T_LEFTPAREN * argList T_RIGHTPAREN
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          argList ::= * expr
          argList ::= * expr T_COMMA argList
    (280) argList ::= *
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  199
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                       argList shift  318
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 280

State 20:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          argList ::= * expr
          argList ::= * expr T_COMMA argList
    (280) argList ::= *
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN * argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  199
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                       argList shift  316
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 280

State 21:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          argList ::= * expr
          argList ::= * expr T_COMMA argList
    (280) argList ::= *
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN * argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  199
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                       argList shift  313
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 280

State 22:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          argList ::= * expr
          argList ::= * expr T_COMMA argList
          argList ::= expr T_COMMA * argList
    (280) argList ::= *
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  199
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                       argList shift  471
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 280

State 23:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          argList ::= * expr
          argList ::= * expr T_COMMA argList
    (280) argList ::= *
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= varNoObjects T_LEFTPAREN * argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  199
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                       argList shift  311
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 280

State 24:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          argList ::= * expr
          argList ::= * expr T_COMMA argList
    (280) argList ::= *
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= maybeDynamicID T_LEFTPAREN * argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  199
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                       argList shift  310
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 280

State 25:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          argList ::= * expr
          argList ::= * expr T_COMMA argList
    (280) argList ::= *
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= T_NEW maybeDynamicID T_LEFTPAREN * argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  199
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                       argList shift  309
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 280

State 26:
          echo ::= T_ECHO * commaExprList
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          commaExprList ::= * expr
          commaExprList ::= * commaExprList T_COMMA expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  224
                 commaExprList shift  323
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 27:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= T_EXIT T_LEFTPAREN * T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= T_EXIT T_LEFTPAREN * expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                  T_RIGHTPAREN shift  410
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  198
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 28:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          arrayIndices ::= arrayIndices T_LEFTSQUARE * expr T_RIGHTSQUARE
          arrayIndices ::= arrayIndices T_LEFTSQUARE * T_RIGHTSQUARE
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                 T_RIGHTSQUARE shift  475
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  202
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 29:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          arrayItems ::= expr T_ARROWKEY * expr
          arrayItems ::= expr T_ARROWKEY * T_AND expr
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                         T_AND shift  76
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  217
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 30:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= var T_ASSIGN * expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= var T_ASSIGN * T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= var T_ASSIGN * T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          assignment ::= var T_ASSIGN * T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                         T_AND shift  113
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  232
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 31:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
    (191) maybeComma ::= T_COMMA *
          arrayItems ::= arrayItems T_COMMA * expr
          arrayItems ::= arrayItems T_COMMA * T_AND expr
          arrayItems ::= arrayItems T_COMMA * expr T_ARROWKEY expr
          arrayItems ::= arrayItems T_COMMA * expr T_ARROWKEY T_AND expr
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                         T_AND shift  94
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  201
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 191

State 32:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          arrayItems ::= arrayItems T_COMMA expr T_ARROWKEY * expr
          arrayItems ::= arrayItems T_COMMA expr T_ARROWKEY * T_AND expr
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                         T_AND shift  93
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  219
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 33:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          arrayIndices ::= T_LEFTSQUARE * expr T_RIGHTSQUARE
          arrayIndices ::= T_LEFTSQUARE * T_RIGHTSQUARE
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                 T_RIGHTSQUARE shift  478
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  204
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 34:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          conditionalExpr ::= expr T_QUESTION * expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  206
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 35:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          baseExpr ::= T_LEFTPAREN * expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  197
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 36:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= expr T_DOT * expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  268
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 37:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= expr T_BOOLEAN_AND * expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  248
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 38:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= T_PRINT * expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  231
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 39:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr T_BOOLEAN_AND_LIT * expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  245
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 40:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= T_CLONE * expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  421
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 41:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= expr T_BOOLEAN_OR * expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  247
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 42:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= T_REQUIRE * expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  213
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 43:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr T_BOOLEAN_OR_LIT * expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  229
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 44:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= T_REQUIRE_ONCE * expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  214
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 45:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr T_BOOLEAN_XOR_LIT * expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  230
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 46:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= T_INCLUDE * expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  215
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 47:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= expr T_DIV * expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  315
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 48:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= T_INCLUDE_ONCE * expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  216
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 49:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= expr T_MOD * expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  314
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 50:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          builtin ::= T_AT * expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  422
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 51:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= expr T_MULT * expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  296
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 52:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= expr T_PLUS * expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  264
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 53:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= expr T_MINUS * expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  265
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 54:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= expr T_GREATER_THAN * expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  258
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 55:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= expr T_LESS_THAN * expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  259
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 56:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= expr T_GREATER_OR_EQUAL * expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  260
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 57:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= expr T_LESS_OR_EQUAL * expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  261
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 58:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= expr T_EQUAL * expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  251
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 59:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= expr T_NOT_EQUAL * expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  252
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 60:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= expr T_IDENTICAL * expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  253
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 61:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= expr T_NOT_IDENTICAL * expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  254
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 62:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= expr T_CARET * expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  250
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 63:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= expr T_PIPE * expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  249
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 64:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= expr T_AND * expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  255
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 65:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= expr T_SL * expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  262
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 66:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= expr T_SR * expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  263
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 67:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= T_FLOAT_CAST * expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  430
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 68:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= T_INT_CAST * expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  431
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 69:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= T_STRING_CAST * expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  432
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 70:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= T_BINARY_CAST * expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  433
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 71:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= T_UNICODE_CAST * expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  434
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 72:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= T_ARRAY_CAST * expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  435
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 73:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= T_OBJECT_CAST * expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  436
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 74:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= T_UNSET_CAST * expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  437
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 75:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          typeCast ::= T_BOOL_CAST * expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  438
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 76:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          arrayItems ::= expr T_ARROWKEY T_AND * expr
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  218
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 77:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= T_PLUS * expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  266
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 78:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= T_MINUS * expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  267
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 79:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= T_BOOLEAN_NOT * expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  300
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 80:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          unaryOp ::= T_TILDE * expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  454
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 81:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          listAssignment ::= T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN * expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  233
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 82:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= var T_AND_EQUAL * expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  234
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 83:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= var T_OR_EQUAL * expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  235
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 84:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= var T_XOR_EQUAL * expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  236
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 85:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= var T_CONCAT_EQUAL * expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  237
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 86:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= var T_DIV_EQUAL * expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  238
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 87:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= var T_MUL_EQUAL * expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  239
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 88:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= var T_PLUS_EQUAL * expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  240
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 89:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= var T_MINUS_EQUAL * expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  241
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 90:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= var T_MOD_EQUAL * expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  242
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 91:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= var T_SL_EQUAL * expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  243
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 92:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          opAssignment ::= var T_SR_EQUAL * expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  244
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 93:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          arrayItems ::= arrayItems T_COMMA expr T_ARROWKEY T_AND * expr
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  220
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 94:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          arrayItems ::= arrayItems T_COMMA T_AND * expr
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  221
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 95:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          arrayItems ::= T_AND * expr
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  222
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 96:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          arrayIndices ::= arrayIndices T_LEFTCURLY * expr T_RIGHTCURLY
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  203
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 97:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          arrayIndices ::= T_LEFTCURLY * expr T_RIGHTCURLY
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  205
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 98:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          conditionalExpr ::= expr T_QUESTION expr T_COLON * expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  246
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 99:
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          commaExprList ::= commaExprList T_COMMA * expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  223
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 100:
          throw ::= T_THROW * expr
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  225
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 101:
     (26) return ::= T_RETURN *
          return ::= T_RETURN * expr
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  226
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 26

State 102:
     (28) break ::= T_BREAK *
          break ::= T_BREAK * expr
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  227
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 28

State 103:
     (30) continue ::= T_CONTINUE *
          continue ::= T_CONTINUE * expr
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  228
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 30

State 104:
          ifBlock ::= T_IF T_LEFTPAREN * expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= T_IF T_LEFTPAREN * expr T_RIGHTPAREN statement elseSingle
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  207
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 105:
          forEach ::= T_FOREACH T_LEFTPAREN * expr T_AS var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN * expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN * expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN * expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  208
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 106:
          doStmt ::= T_DO statement T_WHILE T_LEFTPAREN * expr T_RIGHTPAREN
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  209
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 107:
          whileStmt ::= T_WHILE T_LEFTPAREN * expr T_RIGHTPAREN statement
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  210
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 108:
          switchStmt ::= T_SWITCH T_LEFTPAREN * expr T_RIGHTPAREN switchCaseList
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  211
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 109:
          caseList ::= caseList T_CASE * expr caseSeparator statement_list
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  155
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 110:
          elseSeries ::= T_ELSEIF T_LEFTPAREN * expr T_RIGHTPAREN statement elseSingle
          elseSeries ::= T_ELSEIF T_LEFTPAREN * expr T_RIGHTPAREN statement elseSeries
          baseExpr ::= * assignment
          baseExpr ::= * opAssignment
          baseExpr ::= * listAssignment
          baseExpr ::= * functionInvoke
          baseExpr ::= * constructorInvoke
          baseExpr ::= * unaryOp
          baseExpr ::= * binaryOp
          baseExpr ::= * builtin
          baseExpr ::= * typeCast
          baseExpr ::= * preOp
          baseExpr ::= * postOp
          baseExpr ::= * conditionalExpr
          baseExpr ::= * scalar
          baseExpr ::= * literalArray
          baseExpr ::= * T_LEFTPAREN expr T_RIGHTPAREN
          expr ::= * baseExpr
          expr ::= * rVar
          builtin ::= * T_EXIT
          builtin ::= * T_EXIT T_LEFTPAREN T_RIGHTPAREN
          builtin ::= * T_EXIT T_LEFTPAREN expr T_RIGHTPAREN
          builtin ::= * T_EMPTY T_LEFTPAREN var T_RIGHTPAREN
          builtin ::= * T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN
          builtin ::= * T_PRINT expr
          builtin ::= * T_CLONE expr
          builtin ::= * T_REQUIRE expr
          builtin ::= * T_REQUIRE_ONCE expr
          builtin ::= * T_INCLUDE expr
          builtin ::= * T_INCLUDE_ONCE expr
          builtin ::= * T_AT expr
          conditionalExpr ::= * expr T_QUESTION expr T_COLON expr
          typeCast ::= * T_FLOAT_CAST expr
          typeCast ::= * T_INT_CAST expr
          typeCast ::= * T_STRING_CAST expr
          typeCast ::= * T_BINARY_CAST expr
          typeCast ::= * T_UNICODE_CAST expr
          typeCast ::= * T_ARRAY_CAST expr
          typeCast ::= * T_OBJECT_CAST expr
          typeCast ::= * T_UNSET_CAST expr
          typeCast ::= * T_BOOL_CAST expr
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN
          unaryOp ::= * T_PLUS expr
          unaryOp ::= * T_MINUS expr
          unaryOp ::= * T_BOOLEAN_NOT expr
          unaryOp ::= * T_TILDE expr
          binaryOp ::= * expr T_DOT expr
          binaryOp ::= * expr T_BOOLEAN_AND expr
          binaryOp ::= * expr T_BOOLEAN_AND_LIT expr
          binaryOp ::= * expr T_BOOLEAN_OR expr
          binaryOp ::= * expr T_BOOLEAN_OR_LIT expr
          binaryOp ::= * expr T_BOOLEAN_XOR_LIT expr
          binaryOp ::= * expr T_DIV expr
          binaryOp ::= * expr T_MOD expr
          binaryOp ::= * expr T_MULT expr
          binaryOp ::= * expr T_PLUS expr
          binaryOp ::= * expr T_MINUS expr
          binaryOp ::= * expr T_GREATER_THAN expr
          binaryOp ::= * expr T_LESS_THAN expr
          binaryOp ::= * expr T_GREATER_OR_EQUAL expr
          binaryOp ::= * expr T_LESS_OR_EQUAL expr
          binaryOp ::= * expr T_EQUAL expr
          binaryOp ::= * expr T_NOT_EQUAL expr
          binaryOp ::= * expr T_IDENTICAL expr
          binaryOp ::= * expr T_NOT_IDENTICAL expr
          binaryOp ::= * expr T_CARET expr
          binaryOp ::= * expr T_PIPE expr
          binaryOp ::= * expr T_AND expr
          binaryOp ::= * expr T_SL expr
          binaryOp ::= * expr T_SR expr
          binaryOp ::= * expr T_INSTANCEOF maybeDynamicID
          preOp ::= * T_INC var
          preOp ::= * T_DEC var
          postOp ::= * var T_INC
          postOp ::= * var T_DEC
          assignment ::= * var T_ASSIGN expr
          assignment ::= * var T_ASSIGN T_AND var
          assignment ::= * var T_ASSIGN T_AND functionInvoke
          assignment ::= * var T_ASSIGN T_AND constructorInvoke
          opAssignment ::= * var T_AND_EQUAL expr
          opAssignment ::= * var T_OR_EQUAL expr
          opAssignment ::= * var T_XOR_EQUAL expr
          opAssignment ::= * var T_CONCAT_EQUAL expr
          opAssignment ::= * var T_DIV_EQUAL expr
          opAssignment ::= * var T_MUL_EQUAL expr
          opAssignment ::= * var T_PLUS_EQUAL expr
          opAssignment ::= * var T_MINUS_EQUAL expr
          opAssignment ::= * var T_MOD_EQUAL expr
          opAssignment ::= * var T_SL_EQUAL expr
          opAssignment ::= * var T_SR_EQUAL expr
          listAssignment ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                   T_LEFTPAREN shift  35
                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                 T_BOOLEAN_NOT shift  79
                  T_IDENTIFIER shift  276
                       T_EMPTY shift  290
                       T_ISSET shift  292
                       T_UNSET shift  293
                        T_LIST shift  306
                     T_INCLUDE shift  46
                T_INCLUDE_ONCE shift  48
                     T_REQUIRE shift  42
                T_REQUIRE_ONCE shift  44
                         T_INC shift  122
                         T_DEC shift  123
                        T_EXIT shift  289
                       T_MINUS shift  78
                        T_PLUS shift  77
                       T_CLONE shift  40
                          T_AT shift  50
                    T_INT_CAST shift  68
                  T_FLOAT_CAST shift  67
                 T_STRING_CAST shift  69
                T_UNICODE_CAST shift  71
                 T_BINARY_CAST shift  70
                  T_ARRAY_CAST shift  72
                 T_OBJECT_CAST shift  73
                  T_UNSET_CAST shift  74
                   T_BOOL_CAST shift  75
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                       T_TILDE shift  80
                       T_PRINT shift  38
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                          expr shift  212
                           var shift  257
                      baseExpr shift  408
                    assignment shift  394
                  opAssignment shift  395
                listAssignment shift  396
                functionInvoke shift  256
             constructorInvoke shift  397
                       unaryOp shift  398
                      binaryOp shift  399
                       builtin shift  400
                      typeCast shift  401
                         preOp shift  402
                        postOp shift  403
               conditionalExpr shift  404
                        scalar shift  405
                  literalArray shift  406
                          rVar shift  409
                       literal shift  439
                  literalMagic shift  440
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 111:
          listAssignment ::= T_LIST T_LEFTPAREN * listAssignmentList T_RIGHTPAREN T_ASSIGN expr
          listAssignmentList ::= * listElement
          listAssignmentList ::= * listAssignmentList T_COMMA listElement
          listElement ::= * var
          listElement ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN
    (255) listElement ::= *
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  294
                        T_LIST shift  308
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  463
                functionInvoke shift  456
                maybeDynamicID shift  303
            listAssignmentList shift  277
                   listElement shift  464
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 255

State 112:
          listAssignmentList ::= * listElement
          listAssignmentList ::= * listAssignmentList T_COMMA listElement
          listElement ::= * var
          listElement ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN
          listElement ::= T_LIST T_LEFTPAREN * listAssignmentList T_RIGHTPAREN
    (255) listElement ::= *
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  294
                        T_LIST shift  308
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  463
                functionInvoke shift  456
                maybeDynamicID shift  303
            listAssignmentList shift  278
                   listElement shift  464
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 255

State 113:
          assignment ::= var T_ASSIGN T_AND * var
          assignment ::= var T_ASSIGN T_AND * functionInvoke
          assignment ::= var T_ASSIGN T_AND * constructorInvoke
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= * T_NEW maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  294
                         T_NEW shift  127
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  460
                functionInvoke shift  304
             constructorInvoke shift  461
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 114:
          listAssignmentList ::= listAssignmentList T_COMMA * listElement
          listElement ::= * var
          listElement ::= * T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN
    (255) listElement ::= *
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  294
                        T_LIST shift  308
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  463
                functionInvoke shift  456
                maybeDynamicID shift  303
                   listElement shift  462
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428
                     {default} reduce 255

State 115:
          builtin ::= T_ISSET T_LEFTPAREN * commaVarList T_RIGHTPAREN
          commaVarList ::= * var
          commaVarList ::= * commaVarList T_COMMA var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  294
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  420
                functionInvoke shift  456
                  commaVarList shift  273
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 116:
          builtin ::= T_UNSET T_LEFTPAREN * commaVarList T_RIGHTPAREN
          commaVarList ::= * var
          commaVarList ::= * commaVarList T_COMMA var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  294
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  420
                functionInvoke shift  456
                  commaVarList shift  275
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 117:
          globalVar ::= T_DOLLAR * rVar
          rVar ::= * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  294
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  493
                functionInvoke shift  456
                          rVar shift  492
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 118:
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS * var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS * var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS * T_AND var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS * var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                         T_AND shift  125
                  T_IDENTIFIER shift  294
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  280
                functionInvoke shift  456
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 119:
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY * var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY * T_AND var T_RIGHTPAREN statement
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                         T_AND shift  124
                  T_IDENTIFIER shift  294
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  374
                functionInvoke shift  456
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 120:
          builtin ::= T_EMPTY T_LEFTPAREN * var T_RIGHTPAREN
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  294
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  291
                functionInvoke shift  456
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 121:
          commaVarList ::= commaVarList T_COMMA * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  294
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  416
                functionInvoke shift  456
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 122:
          preOp ::= T_INC * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  294
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  455
                functionInvoke shift  456
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 123:
          preOp ::= T_DEC * var
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  294
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  457
                functionInvoke shift  456
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 124:
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND * var T_RIGHTPAREN statement
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  294
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  375
                functionInvoke shift  456
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 125:
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS T_AND * var T_RIGHTPAREN statement
          var ::= * varWithFunCalls
          var ::= * varWithFunCalls varPropertyList
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          varWithFunCalls ::= * baseVar
          varWithFunCalls ::= * functionInvoke
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  294
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                           var shift  376
                functionInvoke shift  456
                maybeDynamicID shift  303
               varWithFunCalls shift  154
                  varNoObjects shift  302
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  301
                     literalID shift  428

State 126:
          binaryOp ::= expr T_INSTANCEOF * maybeDynamicID
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  297
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                maybeDynamicID shift  423
                  varNoObjects shift  426
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  429
                     literalID shift  428

State 127:
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= * T_IDENTIFIER T_DBL_COLON varNoObjects
          baseVar ::= * varNoObjects
          baseVar ::= * staticMember
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          constructorInvoke ::= T_NEW * maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN
          constructorInvoke ::= T_NEW * maybeDynamicID
          literalID ::= * T_IDENTIFIER
          maybeDynamicID ::= * literalID
          maybeDynamicID ::= * baseVar

                  T_IDENTIFIER shift  297
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                maybeDynamicID shift  305
                  varNoObjects shift  426
                        refVar shift  417
                        varVar shift  157
                  staticMember shift  427
                       baseVar shift  429
                     literalID shift  428

State 128:
          classDecl ::= T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements * T_RIGHTCURLY
          classStatements ::= classStatements * classStatement
          classStatement ::= * classVarFlags classVar T_SEMI
          classStatement ::= * classConstantDecl T_SEMI
          classStatement ::= * methodFlags T_FUNCTION signature methodBody
          classStatement ::= * methodFlags T_AND T_FUNCTION signature methodBody
          classConstantDecl ::= * classConstantDecl T_COMMA T_IDENTIFIER T_ASSIGN staticScalar
          classConstantDecl ::= * T_CONST T_IDENTIFIER T_ASSIGN staticScalar
     (96) methodFlags ::= *
          methodFlags ::= * nonEmptyMemberFlags
          classVarFlags ::= * T_VAR
          classVarFlags ::= * nonEmptyMemberFlags
          nonEmptyMemberFlags ::= * memberFlag
          nonEmptyMemberFlags ::= * nonEmptyMemberFlags memberFlag
          memberFlag ::= * T_PUBLIC
          memberFlag ::= * T_PROTECTED
          memberFlag ::= * T_PRIVATE
          memberFlag ::= * T_STATIC
          memberFlag ::= * T_ABSTRACT
          memberFlag ::= * T_FINAL

                  T_RIGHTCURLY shift  523
                         T_VAR shift  542
                      T_PUBLIC shift  536
                     T_PRIVATE shift  538
                   T_PROTECTED shift  537
                      T_STATIC shift  539
                       T_CONST shift  359
                    T_ABSTRACT shift  540
                       T_FINAL shift  541
                classStatement shift  524
                 classVarFlags shift  178
             classConstantDecl shift  284
                   methodFlags shift  285
           nonEmptyMemberFlags shift  156
                    memberFlag shift  543
                     {default} reduce 96

State 129:
          classDecl ::= T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements * T_RIGHTCURLY
          classStatements ::= classStatements * classStatement
          classStatement ::= * classVarFlags classVar T_SEMI
          classStatement ::= * classConstantDecl T_SEMI
          classStatement ::= * methodFlags T_FUNCTION signature methodBody
          classStatement ::= * methodFlags T_AND T_FUNCTION signature methodBody
          classConstantDecl ::= * classConstantDecl T_COMMA T_IDENTIFIER T_ASSIGN staticScalar
          classConstantDecl ::= * T_CONST T_IDENTIFIER T_ASSIGN staticScalar
     (96) methodFlags ::= *
          methodFlags ::= * nonEmptyMemberFlags
          classVarFlags ::= * T_VAR
          classVarFlags ::= * nonEmptyMemberFlags
          nonEmptyMemberFlags ::= * memberFlag
          nonEmptyMemberFlags ::= * nonEmptyMemberFlags memberFlag
          memberFlag ::= * T_PUBLIC
          memberFlag ::= * T_PROTECTED
          memberFlag ::= * T_PRIVATE
          memberFlag ::= * T_STATIC
          memberFlag ::= * T_ABSTRACT
          memberFlag ::= * T_FINAL

                  T_RIGHTCURLY shift  547
                         T_VAR shift  542
                      T_PUBLIC shift  536
                     T_PRIVATE shift  538
                   T_PROTECTED shift  537
                      T_STATIC shift  539
                       T_CONST shift  359
                    T_ABSTRACT shift  540
                       T_FINAL shift  541
                classStatement shift  524
                 classVarFlags shift  178
             classConstantDecl shift  284
                   methodFlags shift  285
           nonEmptyMemberFlags shift  156
                    memberFlag shift  543
                     {default} reduce 96

State 130:
          classDecl ::= T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements * T_RIGHTCURLY
          classStatements ::= classStatements * classStatement
          classStatement ::= * classVarFlags classVar T_SEMI
          classStatement ::= * classConstantDecl T_SEMI
          classStatement ::= * methodFlags T_FUNCTION signature methodBody
          classStatement ::= * methodFlags T_AND T_FUNCTION signature methodBody
          classConstantDecl ::= * classConstantDecl T_COMMA T_IDENTIFIER T_ASSIGN staticScalar
          classConstantDecl ::= * T_CONST T_IDENTIFIER T_ASSIGN staticScalar
     (96) methodFlags ::= *
          methodFlags ::= * nonEmptyMemberFlags
          classVarFlags ::= * T_VAR
          classVarFlags ::= * nonEmptyMemberFlags
          nonEmptyMemberFlags ::= * memberFlag
          nonEmptyMemberFlags ::= * nonEmptyMemberFlags memberFlag
          memberFlag ::= * T_PUBLIC
          memberFlag ::= * T_PROTECTED
          memberFlag ::= * T_PRIVATE
          memberFlag ::= * T_STATIC
          memberFlag ::= * T_ABSTRACT
          memberFlag ::= * T_FINAL

                  T_RIGHTCURLY shift  548
                         T_VAR shift  542
                      T_PUBLIC shift  536
                     T_PRIVATE shift  538
                   T_PROTECTED shift  537
                      T_STATIC shift  539
                       T_CONST shift  359
                    T_ABSTRACT shift  540
                       T_FINAL shift  541
                classStatement shift  524
                 classVarFlags shift  178
             classConstantDecl shift  284
                   methodFlags shift  285
           nonEmptyMemberFlags shift  156
                    memberFlag shift  543
                     {default} reduce 96

State 131:
          classDecl ::= T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements * T_RIGHTCURLY
          classStatements ::= classStatements * classStatement
          classStatement ::= * classVarFlags classVar T_SEMI
          classStatement ::= * classConstantDecl T_SEMI
          classStatement ::= * methodFlags T_FUNCTION signature methodBody
          classStatement ::= * methodFlags T_AND T_FUNCTION signature methodBody
          classConstantDecl ::= * classConstantDecl T_COMMA T_IDENTIFIER T_ASSIGN staticScalar
          classConstantDecl ::= * T_CONST T_IDENTIFIER T_ASSIGN staticScalar
     (96) methodFlags ::= *
          methodFlags ::= * nonEmptyMemberFlags
          classVarFlags ::= * T_VAR
          classVarFlags ::= * nonEmptyMemberFlags
          nonEmptyMemberFlags ::= * memberFlag
          nonEmptyMemberFlags ::= * nonEmptyMemberFlags memberFlag
          memberFlag ::= * T_PUBLIC
          memberFlag ::= * T_PROTECTED
          memberFlag ::= * T_PRIVATE
          memberFlag ::= * T_STATIC
          memberFlag ::= * T_ABSTRACT
          memberFlag ::= * T_FINAL

                  T_RIGHTCURLY shift  549
                         T_VAR shift  542
                      T_PUBLIC shift  536
                     T_PRIVATE shift  538
                   T_PROTECTED shift  537
                      T_STATIC shift  539
                       T_CONST shift  359
                    T_ABSTRACT shift  540
                       T_FINAL shift  541
                classStatement shift  524
                 classVarFlags shift  178
             classConstantDecl shift  284
                   methodFlags shift  285
           nonEmptyMemberFlags shift  156
                    memberFlag shift  543
                     {default} reduce 96

State 132:
          staticDecl ::= T_STATIC staticVarList T_ASSIGN * staticScalar
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          staticScalar ::= * scalar
          staticScalar ::= * literalArray
          staticScalar ::= * T_PLUS staticScalar
          staticScalar ::= * T_MINUS staticScalar
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN

                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                  T_IDENTIFIER shift  339
                       T_MINUS shift  134
                        T_PLUS shift  133
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                  staticScalar shift  507
                        scalar shift  509
                  literalArray shift  510
                       literal shift  439
                  literalMagic shift  440

State 133:
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          staticScalar ::= * scalar
          staticScalar ::= * literalArray
          staticScalar ::= * T_PLUS staticScalar
          staticScalar ::= T_PLUS * staticScalar
          staticScalar ::= * T_MINUS staticScalar
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN

                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                  T_IDENTIFIER shift  339
                       T_MINUS shift  134
                        T_PLUS shift  133
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                  staticScalar shift  511
                        scalar shift  509
                  literalArray shift  510
                       literal shift  439
                  literalMagic shift  440

State 134:
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          staticScalar ::= * scalar
          staticScalar ::= * literalArray
          staticScalar ::= * T_PLUS staticScalar
          staticScalar ::= * T_MINUS staticScalar
          staticScalar ::= T_MINUS * staticScalar
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN

                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                  T_IDENTIFIER shift  339
                       T_MINUS shift  134
                        T_PLUS shift  133
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                  staticScalar shift  512
                        scalar shift  509
                  literalArray shift  510
                       literal shift  439
                  literalMagic shift  440

State 135:
          formalParam ::= maybeHint T_VARIABLE T_ASSIGN * staticScalar
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          staticScalar ::= * scalar
          staticScalar ::= * literalArray
          staticScalar ::= * T_PLUS staticScalar
          staticScalar ::= * T_MINUS staticScalar
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN

                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                  T_IDENTIFIER shift  339
                       T_MINUS shift  134
                        T_PLUS shift  133
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                  staticScalar shift  515
                        scalar shift  509
                  literalArray shift  510
                       literal shift  439
                  literalMagic shift  440

State 136:
          formalParam ::= maybeHint T_AND T_VARIABLE T_ASSIGN * staticScalar
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          staticScalar ::= * scalar
          staticScalar ::= * literalArray
          staticScalar ::= * T_PLUS staticScalar
          staticScalar ::= * T_MINUS staticScalar
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN

                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                  T_IDENTIFIER shift  339
                       T_MINUS shift  134
                        T_PLUS shift  133
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                  staticScalar shift  516
                        scalar shift  509
                  literalArray shift  510
                       literal shift  439
                  literalMagic shift  440

State 137:
          classVar ::= classVar T_COMMA T_VARIABLE T_ASSIGN * staticScalar
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          staticScalar ::= * scalar
          staticScalar ::= * literalArray
          staticScalar ::= * T_PLUS staticScalar
          staticScalar ::= * T_MINUS staticScalar
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN

                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                  T_IDENTIFIER shift  339
                       T_MINUS shift  134
                        T_PLUS shift  133
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                  staticScalar shift  526
                        scalar shift  509
                  literalArray shift  510
                       literal shift  439
                  literalMagic shift  440

State 138:
          classVar ::= T_VARIABLE T_ASSIGN * staticScalar
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          staticScalar ::= * scalar
          staticScalar ::= * literalArray
          staticScalar ::= * T_PLUS staticScalar
          staticScalar ::= * T_MINUS staticScalar
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN

                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                  T_IDENTIFIER shift  339
                       T_MINUS shift  134
                        T_PLUS shift  133
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                  staticScalar shift  527
                        scalar shift  509
                  literalArray shift  510
                       literal shift  439
                  literalMagic shift  440

State 139:
          classConstantDecl ::= classConstantDecl T_COMMA T_IDENTIFIER T_ASSIGN * staticScalar
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          staticScalar ::= * scalar
          staticScalar ::= * literalArray
          staticScalar ::= * T_PLUS staticScalar
          staticScalar ::= * T_MINUS staticScalar
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN

                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                  T_IDENTIFIER shift  339
                       T_MINUS shift  134
                        T_PLUS shift  133
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                  staticScalar shift  529
                        scalar shift  509
                  literalArray shift  510
                       literal shift  439
                  literalMagic shift  440

State 140:
          classConstantDecl ::= T_CONST T_IDENTIFIER T_ASSIGN * staticScalar
          scalar ::= * literal
          scalar ::= * literalMagic
          scalar ::= * T_IDENTIFIER
          scalar ::= * T_IDENTIFIER T_DBL_COLON T_IDENTIFIER
          staticScalar ::= * scalar
          staticScalar ::= * literalArray
          staticScalar ::= * T_PLUS staticScalar
          staticScalar ::= * T_MINUS staticScalar
          literal ::= * T_SQ_STRING
          literal ::= * T_DQ_STRING
          literal ::= * T_LNUMBER
          literal ::= * T_DNUMBER
          literal ::= * T_TRUE
          literal ::= * T_FALSE
          literal ::= * T_NULL
          literalMagic ::= * T_MAGIC_FILE
          literalMagic ::= * T_MAGIC_LINE
          literalMagic ::= * T_MAGIC_CLASS
          literalMagic ::= * T_MAGIC_METHOD
          literalMagic ::= * T_MAGIC_FUNCTION
          literalMagic ::= * T_MAGIC_NS
          literalArray ::= * T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN

                       T_ARRAY shift  299
                   T_DQ_STRING shift  442
                  T_IDENTIFIER shift  339
                       T_MINUS shift  134
                        T_PLUS shift  133
                  T_MAGIC_FILE shift  448
                  T_MAGIC_LINE shift  449
                    T_MAGIC_NS shift  453
                 T_MAGIC_CLASS shift  450
              T_MAGIC_FUNCTION shift  452
                T_MAGIC_METHOD shift  451
                   T_SQ_STRING shift  441
                     T_LNUMBER shift  443
                     T_DNUMBER shift  444
                        T_TRUE shift  445
                       T_FALSE shift  446
                        T_NULL shift  447
                  staticScalar shift  534
                        scalar shift  509
                  literalArray shift  510
                       literal shift  439
                  literalMagic shift  440

State 141:
          varProperty ::= T_CLASSDEREF * objProperty maybeMethodInvoke
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          objProperty ::= * T_IDENTIFIER
          objProperty ::= * T_IDENTIFIER arrayIndices
          objProperty ::= * varNoObjects
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR

                  T_IDENTIFIER shift  159
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                   objProperty shift  167
                  varNoObjects shift  482
                        refVar shift  417
                        varVar shift  157

State 142:
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= T_IDENTIFIER T_DBL_COLON * varNoObjects
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= T_IDENTIFIER T_DBL_COLON * T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= T_IDENTIFIER T_DBL_COLON * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN

                  T_IDENTIFIER shift  317
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                  varNoObjects shift  295
                        refVar shift  417
                        varVar shift  157

State 143:
          scalar ::= T_IDENTIFIER T_DBL_COLON * T_IDENTIFIER
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= T_IDENTIFIER T_DBL_COLON * varNoObjects
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR
          functionInvoke ::= T_IDENTIFIER T_DBL_COLON * T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= T_IDENTIFIER T_DBL_COLON * varNoObjects T_LEFTPAREN argList T_RIGHTPAREN

                  T_IDENTIFIER shift  298
                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                  varNoObjects shift  295
                        refVar shift  417
                        varVar shift  157

State 144:
          formalParam ::= * maybeHint T_VARIABLE
          formalParam ::= * maybeHint T_AND T_VARIABLE
          formalParam ::= * maybeHint T_VARIABLE T_ASSIGN staticScalar
          formalParam ::= * maybeHint T_AND T_VARIABLE T_ASSIGN staticScalar
     (71) maybeHint ::= *
          maybeHint ::= * T_ARRAY
          maybeHint ::= * T_IDENTIFIER
          formalParamList ::= * formalParam
          formalParamList ::= * formalParam T_COMMA formalParamList
     (76) formalParamList ::= *
          signature ::= T_IDENTIFIER T_LEFTPAREN * formalParamList T_RIGHTPAREN

                  T_RIGHTPAREN reduce 76
                       T_ARRAY shift  517
                  T_IDENTIFIER shift  518
                   formalParam shift  346
                     maybeHint shift  282
               formalParamList shift  347
                     {default} reduce 71

State 145:
          formalParam ::= * maybeHint T_VARIABLE
          formalParam ::= * maybeHint T_AND T_VARIABLE
          formalParam ::= * maybeHint T_VARIABLE T_ASSIGN staticScalar
          formalParam ::= * maybeHint T_AND T_VARIABLE T_ASSIGN staticScalar
     (71) maybeHint ::= *
          maybeHint ::= * T_ARRAY
          maybeHint ::= * T_IDENTIFIER
          formalParamList ::= * formalParam
          formalParamList ::= * formalParam T_COMMA formalParamList
          formalParamList ::= formalParam T_COMMA * formalParamList
     (76) formalParamList ::= *

                  T_RIGHTPAREN reduce 76
                       T_ARRAY shift  517
                  T_IDENTIFIER shift  518
                   formalParam shift  346
                     maybeHint shift  282
               formalParamList shift  519
                     {default} reduce 71

State 146:
          formalParam ::= * maybeHint T_VARIABLE
          formalParam ::= * maybeHint T_AND T_VARIABLE
          formalParam ::= * maybeHint T_VARIABLE T_ASSIGN staticScalar
          formalParam ::= * maybeHint T_AND T_VARIABLE T_ASSIGN staticScalar
     (71) maybeHint ::= *
          maybeHint ::= * T_ARRAY
          maybeHint ::= * T_IDENTIFIER
          formalParamList ::= * formalParam
          formalParamList ::= * formalParam T_COMMA formalParamList
     (76) formalParamList ::= *
          signature ::= T_AND T_IDENTIFIER T_LEFTPAREN * formalParamList T_RIGHTPAREN

                  T_RIGHTPAREN reduce 76
                       T_ARRAY shift  517
                  T_IDENTIFIER shift  518
                   formalParam shift  346
                     maybeHint shift  282
               formalParamList shift  350
                     {default} reduce 71

State 147:
          varNoObjects ::= * refVar
          varNoObjects ::= * varVar refVar
          staticMember ::= T_IDENTIFIER T_DBL_COLON * varNoObjects
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= * T_DOLLAR
          varVar ::= * varVar T_DOLLAR

                    T_VARIABLE shift  158
                      T_DOLLAR shift  425
                  varNoObjects shift  424
                        refVar shift  417
                        varVar shift  157

State 148:
          tryCatch ::= T_TRY statementBlock catch * moreCatches
     (35) moreCatches ::= *
          moreCatches ::= * nonEmptyCatches
          nonEmptyCatches ::= * catch
          nonEmptyCatches ::= * nonEmptyCatches catch
          catch ::= * T_CATCH T_LEFTPAREN T_IDENTIFIER T_VARIABLE T_RIGHTPAREN statementBlock

                       T_CATCH shift  325
                         catch shift  499
                   moreCatches shift  496
               nonEmptyCatches shift  171
                     {default} reduce 35

State 149:
          global ::= T_GLOBAL * globalVarList
          globalVarList ::= * globalVar
          globalVarList ::= * globalVarList T_COMMA globalVar
          globalVar ::= * T_VARIABLE
          globalVar ::= * T_DOLLAR rVar

                    T_VARIABLE shift  491
                      T_DOLLAR shift  117
                 globalVarList shift  324
                     globalVar shift  494

State 150:
     (40) elseSingle ::= *
          elseSingle ::= * T_ELSE statement
          elseSeries ::= * T_ELSEIF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          elseSeries ::= * T_ELSEIF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= T_IF T_LEFTPAREN expr T_RIGHTPAREN statement * elseSeries
          ifBlock ::= T_IF T_LEFTPAREN expr T_RIGHTPAREN statement * elseSingle

                        T_ELSE shift  4
                        T_ELSE reduce 40  ** Parsing conflict **
                      T_ELSEIF shift  377
                      T_ELSEIF reduce 40  ** Parsing conflict **
                    elseSingle shift  561
                    elseSeries shift  560
                     {default} reduce 40

State 151:
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          classStatement ::= methodFlags T_FUNCTION signature * methodBody
          methodBody ::= * T_SEMI
          methodBody ::= * statementBlock

                   T_LEFTCURLY shift  187
                        T_SEMI shift  531
                statementBlock shift  532
                    methodBody shift  530

State 152:
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          classStatement ::= methodFlags T_AND T_FUNCTION signature * methodBody
          methodBody ::= * T_SEMI
          methodBody ::= * statementBlock

                   T_LEFTCURLY shift  187
                        T_SEMI shift  531
                statementBlock shift  532
                    methodBody shift  533

State 153:
     (40) elseSingle ::= *
          elseSingle ::= * T_ELSE statement
          elseSeries ::= * T_ELSEIF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          elseSeries ::= T_ELSEIF T_LEFTPAREN expr T_RIGHTPAREN statement * elseSingle
          elseSeries ::= * T_ELSEIF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          elseSeries ::= T_ELSEIF T_LEFTPAREN expr T_RIGHTPAREN statement * elseSeries

                        T_ELSE shift  4
                        T_ELSE reduce 40  ** Parsing conflict **
                      T_ELSEIF shift  377
                      T_ELSEIF reduce 40  ** Parsing conflict **
                    elseSingle shift  558
                    elseSeries shift  559
                     {default} reduce 40

State 154:
    (257) var ::= varWithFunCalls *
          var ::= varWithFunCalls * varPropertyList
          varPropertyList ::= * varPropertyList varProperty
          varPropertyList ::= * varProperty
          varProperty ::= * T_CLASSDEREF objProperty maybeMethodInvoke

                  T_CLASSDEREF shift  141
               varPropertyList shift  166
                   varProperty shift  483
                     {default} reduce 257

State 155:
          caseList ::= caseList T_CASE expr * caseSeparator statement_list
          caseSeparator ::= * T_COLON
          caseSeparator ::= * T_SEMI
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_COLON shift  550
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                        T_SEMI shift  551
                 caseSeparator shift  188

State 156:
     (97) methodFlags ::= nonEmptyMemberFlags *
     (99) classVarFlags ::= nonEmptyMemberFlags *
          nonEmptyMemberFlags ::= nonEmptyMemberFlags * memberFlag
          memberFlag ::= * T_PUBLIC
          memberFlag ::= * T_PROTECTED
          memberFlag ::= * T_PRIVATE
          memberFlag ::= * T_STATIC
          memberFlag ::= * T_ABSTRACT
          memberFlag ::= * T_FINAL

                      T_PUBLIC shift  536
                     T_PRIVATE shift  538
                   T_PROTECTED shift  537
                      T_STATIC shift  539
                    T_ABSTRACT shift  540
                       T_FINAL shift  541
                    T_VARIABLE reduce 99
                    memberFlag shift  535
                     {default} reduce 97

State 157:
          varNoObjects ::= varVar * refVar
          refVar ::= * T_VARIABLE
          refVar ::= * T_VARIABLE arrayIndices
          varVar ::= varVar * T_DOLLAR

                    T_VARIABLE shift  158
                      T_DOLLAR shift  480
                        refVar shift  418

State 158:
    (271) refVar ::= T_VARIABLE *
          refVar ::= T_VARIABLE * arrayIndices
          arrayIndices ::= * T_LEFTSQUARE expr T_RIGHTSQUARE
          arrayIndices ::= * T_LEFTCURLY expr T_RIGHTCURLY
          arrayIndices ::= * arrayIndices T_LEFTSQUARE expr T_RIGHTSQUARE
          arrayIndices ::= * arrayIndices T_LEFTCURLY expr T_RIGHTCURLY
          arrayIndices ::= * T_LEFTSQUARE T_RIGHTSQUARE
          arrayIndices ::= * arrayIndices T_LEFTSQUARE T_RIGHTSQUARE

                   T_LEFTCURLY shift  97
                  T_LEFTSQUARE shift  33
                  arrayIndices shift  274
                     {default} reduce 271

State 159:
    (273) objProperty ::= T_IDENTIFIER *
          objProperty ::= T_IDENTIFIER * arrayIndices
          arrayIndices ::= * T_LEFTSQUARE expr T_RIGHTSQUARE
          arrayIndices ::= * T_LEFTCURLY expr T_RIGHTCURLY
          arrayIndices ::= * arrayIndices T_LEFTSQUARE expr T_RIGHTSQUARE
          arrayIndices ::= * arrayIndices T_LEFTCURLY expr T_RIGHTCURLY
          arrayIndices ::= * T_LEFTSQUARE T_RIGHTSQUARE
          arrayIndices ::= * arrayIndices T_LEFTSQUARE T_RIGHTSQUARE

                   T_LEFTCURLY shift  97
                  T_LEFTSQUARE shift  33
                  arrayIndices shift  279
                     {default} reduce 273

State 160:
          globalVarList ::= globalVarList T_COMMA * globalVar
          globalVar ::= * T_VARIABLE
          globalVar ::= * T_DOLLAR rVar

                    T_VARIABLE shift  491
                      T_DOLLAR shift  117
                     globalVar shift  490

State 161:
          switchStmt ::= T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN * switchCaseList
          switchCaseList ::= * T_LEFTCURLY caseList T_RIGHTCURLY
          switchCaseList ::= * T_LEFTCURLY T_SEMI caseList T_RIGHTCURLY
          switchCaseList ::= * T_COLON caseList T_ENDSWITCH
          switchCaseList ::= * T_COLON T_SEMI caseList T_ENDSWITCH

                   T_LEFTCURLY shift  173
                       T_COLON shift  186
                switchCaseList shift  505

State 162:
          signature ::= * T_IDENTIFIER T_LEFTPAREN formalParamList T_RIGHTPAREN
          signature ::= * T_AND T_IDENTIFIER T_LEFTPAREN formalParamList T_RIGHTPAREN
          functionDecl ::= T_FUNCTION * signature statementBlock

                         T_AND shift  348
                  T_IDENTIFIER shift  342
                     signature shift  175

State 163:
          signature ::= * T_IDENTIFIER T_LEFTPAREN formalParamList T_RIGHTPAREN
          signature ::= * T_AND T_IDENTIFIER T_LEFTPAREN formalParamList T_RIGHTPAREN
          classStatement ::= methodFlags T_FUNCTION * signature methodBody

                         T_AND shift  348
                  T_IDENTIFIER shift  342
                     signature shift  151

State 164:
          signature ::= * T_IDENTIFIER T_LEFTPAREN formalParamList T_RIGHTPAREN
          signature ::= * T_AND T_IDENTIFIER T_LEFTPAREN formalParamList T_RIGHTPAREN
          classStatement ::= methodFlags T_AND T_FUNCTION * signature methodBody

                         T_AND shift  348
                  T_IDENTIFIER shift  342
                     signature shift  152

State 165:
          caseList ::= caseList T_DEFAULT * caseSeparator statement_list
          caseSeparator ::= * T_COLON
          caseSeparator ::= * T_SEMI

                       T_COLON shift  550
                        T_SEMI shift  551
                 caseSeparator shift  193

State 166:
    (258) var ::= varWithFunCalls varPropertyList *
          varPropertyList ::= varPropertyList * varProperty
          varProperty ::= * T_CLASSDEREF objProperty maybeMethodInvoke

                  T_CLASSDEREF shift  141
                   varProperty shift  413
                     {default} reduce 258

State 167:
          varProperty ::= T_CLASSDEREF objProperty * maybeMethodInvoke
          maybeMethodInvoke ::= * T_LEFTPAREN argList T_RIGHTPAREN
    (263) maybeMethodInvoke ::= *

                   T_LEFTPAREN shift  19
             maybeMethodInvoke shift  414
                     {default} reduce 263

State 168:
          arrayItemList ::= arrayItems * maybeComma
          maybeComma ::= * T_COMMA
    (192) maybeComma ::= *
          arrayItems ::= arrayItems * T_COMMA expr
          arrayItems ::= arrayItems * T_COMMA T_AND expr
          arrayItems ::= arrayItems * T_COMMA expr T_ARROWKEY expr
          arrayItems ::= arrayItems * T_COMMA expr T_ARROWKEY T_AND expr

                       T_COMMA shift  31
                    maybeComma shift  469
                     {default} reduce 192

State 169:
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          tryCatch ::= T_TRY * statementBlock catch moreCatches

                   T_LEFTCURLY shift  187
                statementBlock shift  170

State 170:
          tryCatch ::= T_TRY statementBlock * catch moreCatches
          catch ::= * T_CATCH T_LEFTPAREN T_IDENTIFIER T_VARIABLE T_RIGHTPAREN statementBlock

                       T_CATCH shift  325
                         catch shift  148

State 171:
     (36) moreCatches ::= nonEmptyCatches *
          nonEmptyCatches ::= nonEmptyCatches * catch
          catch ::= * T_CATCH T_LEFTPAREN T_IDENTIFIER T_VARIABLE T_RIGHTPAREN statementBlock

                       T_CATCH shift  325
                         catch shift  497
                     {default} reduce 36

State 172:
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          catch ::= T_CATCH T_LEFTPAREN T_IDENTIFIER T_VARIABLE T_RIGHTPAREN * statementBlock

                   T_LEFTCURLY shift  187
                statementBlock shift  498

State 173:
          switchCaseList ::= T_LEFTCURLY * caseList T_RIGHTCURLY
          switchCaseList ::= T_LEFTCURLY * T_SEMI caseList T_RIGHTCURLY
     (60) caseList ::= *
          caseList ::= * caseList T_CASE expr caseSeparator statement_list
          caseList ::= * caseList T_DEFAULT caseSeparator statement_list

                        T_SEMI shift  194
                      caseList shift  269
                     {default} reduce 60

State 174:
          staticDecl ::= T_STATIC * staticVarList
          staticDecl ::= T_STATIC * staticVarList T_ASSIGN staticScalar
          staticVarList ::= * T_VARIABLE
          staticVarList ::= * staticVarList T_COMMA T_VARIABLE

                    T_VARIABLE shift  514
                 staticVarList shift  281

State 175:
          statementBlock ::= * T_LEFTCURLY statement_list T_RIGHTCURLY
          functionDecl ::= T_FUNCTION signature * statementBlock

                   T_LEFTCURLY shift  187
                statementBlock shift  522

State 176:
          classDecl ::= T_CLASS T_IDENTIFIER * classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
    (110) classExtends ::= *
          classExtends ::= * T_EXTENDS T_IDENTIFIER

                     T_EXTENDS shift  363
                  classExtends shift  177
                     {default} reduce 110

State 177:
          classDecl ::= T_CLASS T_IDENTIFIER classExtends * classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
    (114) classImplements ::= *
          classImplements ::= * T_IMPLEMENTS idList

                  T_IMPLEMENTS shift  179
               classImplements shift  352
                     {default} reduce 114

State 178:
          classStatement ::= classVarFlags * classVar T_SEMI
          classVar ::= * classVar T_COMMA T_VARIABLE
          classVar ::= * classVar T_COMMA T_VARIABLE T_ASSIGN staticScalar
          classVar ::= * T_VARIABLE
          classVar ::= * T_VARIABLE T_ASSIGN staticScalar

                    T_VARIABLE shift  355
                      classVar shift  283

State 179:
          classImplements ::= T_IMPLEMENTS * idList
          idList ::= * T_IDENTIFIER
          idList ::= * idList T_COMMA T_IDENTIFIER

                  T_IDENTIFIER shift  545
                        idList shift  361

State 180:
          classDecl ::= T_FINAL T_CLASS T_IDENTIFIER * classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
    (110) classExtends ::= *
          classExtends ::= * T_EXTENDS T_IDENTIFIER

                     T_EXTENDS shift  363
                  classExtends shift  181
                     {default} reduce 110

State 181:
          classDecl ::= T_FINAL T_CLASS T_IDENTIFIER classExtends * classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
    (114) classImplements ::= *
          classImplements ::= * T_IMPLEMENTS idList

                  T_IMPLEMENTS shift  179
               classImplements shift  366
                     {default} reduce 114

State 182:
          classDecl ::= T_ABSTRACT T_CLASS T_IDENTIFIER * classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
    (110) classExtends ::= *
          classExtends ::= * T_EXTENDS T_IDENTIFIER

                     T_EXTENDS shift  363
                  classExtends shift  183
                     {default} reduce 110

State 183:
          classDecl ::= T_ABSTRACT T_CLASS T_IDENTIFIER classExtends * classImplements T_LEFTCURLY classStatements T_RIGHTCURLY
    (114) classImplements ::= *
          classImplements ::= * T_IMPLEMENTS idList

                  T_IMPLEMENTS shift  179
               classImplements shift  369
                     {default} reduce 114

State 184:
          classDecl ::= T_INTERFACE T_IDENTIFIER * interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY
    (112) interfaceExtends ::= *
          interfaceExtends ::= * T_EXTENDS idList

                     T_EXTENDS shift  185
              interfaceExtends shift  371
                     {default} reduce 112

State 185:
          interfaceExtends ::= T_EXTENDS * idList
          idList ::= * T_IDENTIFIER
          idList ::= * idList T_COMMA T_IDENTIFIER

                  T_IDENTIFIER shift  545
                        idList shift  372

State 186:
          switchCaseList ::= T_COLON * caseList T_ENDSWITCH
          switchCaseList ::= T_COLON * T_SEMI caseList T_ENDSWITCH
     (60) caseList ::= *
          caseList ::= * caseList T_CASE expr caseSeparator statement_list
          caseList ::= * caseList T_DEFAULT caseSeparator statement_list

                        T_SEMI shift  195
                      caseList shift  271
                     {default} reduce 60

State 187:
      (1) statement_list ::= *
          statement_list ::= * statement_list statement
          statementBlock ::= T_LEFTCURLY * statement_list T_RIGHTCURLY

                statement_list shift  2
                     {default} reduce 1

State 188:
      (1) statement_list ::= *
          statement_list ::= * statement_list statement
          caseList ::= caseList T_CASE expr caseSeparator * statement_list

                statement_list shift  9
                     {default} reduce 1

State 189:
          classDecl ::= T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY * classStatements T_RIGHTCURLY
     (84) classStatements ::= *
          classStatements ::= * classStatements classStatement

               classStatements shift  128
                     {default} reduce 84

State 190:
          classDecl ::= T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY * classStatements T_RIGHTCURLY
     (84) classStatements ::= *
          classStatements ::= * classStatements classStatement

               classStatements shift  129
                     {default} reduce 84

State 191:
          classDecl ::= T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY * classStatements T_RIGHTCURLY
     (84) classStatements ::= *
          classStatements ::= * classStatements classStatement

               classStatements shift  130
                     {default} reduce 84

State 192:
          classDecl ::= T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY * classStatements T_RIGHTCURLY
     (84) classStatements ::= *
          classStatements ::= * classStatements classStatement

               classStatements shift  131
                     {default} reduce 84

State 193:
      (1) statement_list ::= *
          statement_list ::= * statement_list statement
          caseList ::= caseList T_DEFAULT caseSeparator * statement_list

                statement_list shift  10
                     {default} reduce 1

State 194:
          switchCaseList ::= T_LEFTCURLY T_SEMI * caseList T_RIGHTCURLY
     (60) caseList ::= *
          caseList ::= * caseList T_CASE expr caseSeparator statement_list
          caseList ::= * caseList T_DEFAULT caseSeparator statement_list

                      caseList shift  270
                     {default} reduce 60

State 195:
          switchCaseList ::= T_COLON T_SEMI * caseList T_ENDSWITCH
     (60) caseList ::= *
          caseList ::= * caseList T_CASE expr caseSeparator statement_list
          caseList ::= * caseList T_DEFAULT caseSeparator statement_list

                      caseList shift  272
                     {default} reduce 60

State 196:
          statement ::= expr * T_SEMI
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                        T_SEMI shift  393

State 197:
          baseExpr ::= T_LEFTPAREN expr * T_RIGHTPAREN
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                  T_RIGHTPAREN shift  407
                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62

State 198:
          builtin ::= T_EXIT T_LEFTPAREN expr * T_RIGHTPAREN
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                  T_RIGHTPAREN shift  411
                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62

State 199:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
    (278) argList ::= expr *
          argList ::= expr * T_COMMA argList

                       T_COMMA shift  22
                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 278

State 200:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (193) arrayItems ::= expr *
          arrayItems ::= expr * T_ARROWKEY expr
          arrayItems ::= expr * T_ARROWKEY T_AND expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                    T_ARROWKEY shift  29
                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 193

State 201:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (197) arrayItems ::= arrayItems T_COMMA expr *
          arrayItems ::= arrayItems T_COMMA expr * T_ARROWKEY expr
          arrayItems ::= arrayItems T_COMMA expr * T_ARROWKEY T_AND expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                    T_ARROWKEY shift  32
                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 197

State 202:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
          arrayIndices ::= arrayIndices T_LEFTSQUARE expr * T_RIGHTSQUARE

                 T_RIGHTSQUARE shift  474
                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62

State 203:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
          arrayIndices ::= arrayIndices T_LEFTCURLY expr * T_RIGHTCURLY

                  T_RIGHTCURLY shift  476
                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62

State 204:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
          arrayIndices ::= T_LEFTSQUARE expr * T_RIGHTSQUARE

                 T_RIGHTSQUARE shift  477
                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62

State 205:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
          arrayIndices ::= T_LEFTCURLY expr * T_RIGHTCURLY

                  T_RIGHTCURLY shift  479
                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62

State 206:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          conditionalExpr ::= expr T_QUESTION expr * T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_COLON shift  98
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62

State 207:
          ifBlock ::= T_IF T_LEFTPAREN expr * T_RIGHTPAREN statement elseSeries
          ifBlock ::= T_IF T_LEFTPAREN expr * T_RIGHTPAREN statement elseSingle
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                  T_RIGHTPAREN shift  3
                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62

State 208:
          forEach ::= T_FOREACH T_LEFTPAREN expr * T_AS var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN expr * T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN expr * T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN expr * T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                          T_AS shift  118
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62

State 209:
          doStmt ::= T_DO statement T_WHILE T_LEFTPAREN expr * T_RIGHTPAREN
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                  T_RIGHTPAREN shift  503
                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62

State 210:
          whileStmt ::= T_WHILE T_LEFTPAREN expr * T_RIGHTPAREN statement
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                  T_RIGHTPAREN shift  8
                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62

State 211:
          switchStmt ::= T_SWITCH T_LEFTPAREN expr * T_RIGHTPAREN switchCaseList
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                  T_RIGHTPAREN shift  161
                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62

State 212:
          elseSeries ::= T_ELSEIF T_LEFTPAREN expr * T_RIGHTPAREN statement elseSingle
          elseSeries ::= T_ELSEIF T_LEFTPAREN expr * T_RIGHTPAREN statement elseSeries
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                  T_RIGHTPAREN shift  14
                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62

State 213:
    (143) builtin ::= T_REQUIRE expr *
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 143

State 214:
    (144) builtin ::= T_REQUIRE_ONCE expr *
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 144

State 215:
    (145) builtin ::= T_INCLUDE expr *
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 145

State 216:
    (146) builtin ::= T_INCLUDE_ONCE expr *
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 146

State 217:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (195) arrayItems ::= expr T_ARROWKEY expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 195

State 218:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (196) arrayItems ::= expr T_ARROWKEY T_AND expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 196

State 219:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (199) arrayItems ::= arrayItems T_COMMA expr T_ARROWKEY expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 199

State 220:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (200) arrayItems ::= arrayItems T_COMMA expr T_ARROWKEY T_AND expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 200

State 221:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (198) arrayItems ::= arrayItems T_COMMA T_AND expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 198

State 222:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (194) arrayItems ::= T_AND expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 194

State 223:
    (157) commaExprList ::= commaExprList T_COMMA expr *
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 157

State 224:
    (156) commaExprList ::= expr *
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 156

State 225:
     (25) throw ::= T_THROW expr *
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 25

State 226:
     (27) return ::= T_RETURN expr *
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 27

State 227:
     (29) break ::= T_BREAK expr *
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 29

State 228:
     (31) continue ::= T_CONTINUE expr *
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
              T_BOOLEAN_OR_LIT shift  43
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 31

State 229:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
    (210) binaryOp ::= expr T_BOOLEAN_OR_LIT expr *
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
             T_BOOLEAN_XOR_LIT shift  45
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 210

State 230:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
    (211) binaryOp ::= expr T_BOOLEAN_XOR_LIT expr *
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
             T_BOOLEAN_AND_LIT shift  39
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 211

State 231:
    (141) builtin ::= T_PRINT expr *
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 141

State 232:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
    (235) assignment ::= var T_ASSIGN expr *

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 235

State 233:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
    (250) listAssignment ::= T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr *

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 250

State 234:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
    (239) opAssignment ::= var T_AND_EQUAL expr *

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 239

State 235:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
    (240) opAssignment ::= var T_OR_EQUAL expr *

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 240

State 236:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
    (241) opAssignment ::= var T_XOR_EQUAL expr *

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 241

State 237:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
    (242) opAssignment ::= var T_CONCAT_EQUAL expr *

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 242

State 238:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
    (243) opAssignment ::= var T_DIV_EQUAL expr *

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 243

State 239:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
    (244) opAssignment ::= var T_MUL_EQUAL expr *

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 244

State 240:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
    (245) opAssignment ::= var T_PLUS_EQUAL expr *

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 245

State 241:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
    (246) opAssignment ::= var T_MINUS_EQUAL expr *

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 246

State 242:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
    (247) opAssignment ::= var T_MOD_EQUAL expr *

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 247

State 243:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
    (248) opAssignment ::= var T_SL_EQUAL expr *

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 248

State 244:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID
    (249) opAssignment ::= var T_SR_EQUAL expr *

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 249

State 245:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
    (208) binaryOp ::= expr T_BOOLEAN_AND_LIT expr *
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                    T_QUESTION shift  34
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 208

State 246:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (158) conditionalExpr ::= expr T_QUESTION expr T_COLON expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                 T_BOOLEAN_AND shift  37
                  T_BOOLEAN_OR shift  41
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 158

State 247:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
    (209) binaryOp ::= expr T_BOOLEAN_OR expr *
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 209

State 248:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
    (207) binaryOp ::= expr T_BOOLEAN_AND expr *
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                        T_PIPE shift  63
                       T_CARET shift  62
                     {default} reduce 207

State 249:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
    (226) binaryOp ::= expr T_PIPE expr *
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                       T_CARET shift  62
                     {default} reduce 226

State 250:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
    (225) binaryOp ::= expr T_CARET expr *
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_AND shift  64
                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                     {default} reduce 225

State 251:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
    (221) binaryOp ::= expr T_EQUAL expr *
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                       T_EQUAL shift  58
                       T_EQUAL reduce 221 ** Parsing conflict **
                   T_NOT_EQUAL shift  59
                   T_NOT_EQUAL reduce 221 ** Parsing conflict **
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
                   T_IDENTICAL reduce 221 ** Parsing conflict **
               T_NOT_IDENTICAL shift  61
               T_NOT_IDENTICAL reduce 221 ** Parsing conflict **
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                     {default} reduce 221

State 252:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
    (222) binaryOp ::= expr T_NOT_EQUAL expr *
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                       T_EQUAL shift  58
                       T_EQUAL reduce 222 ** Parsing conflict **
                   T_NOT_EQUAL shift  59
                   T_NOT_EQUAL reduce 222 ** Parsing conflict **
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
                   T_IDENTICAL reduce 222 ** Parsing conflict **
               T_NOT_IDENTICAL shift  61
               T_NOT_IDENTICAL reduce 222 ** Parsing conflict **
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                     {default} reduce 222

State 253:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
    (223) binaryOp ::= expr T_IDENTICAL expr *
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                       T_EQUAL shift  58
                       T_EQUAL reduce 223 ** Parsing conflict **
                   T_NOT_EQUAL shift  59
                   T_NOT_EQUAL reduce 223 ** Parsing conflict **
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
                   T_IDENTICAL reduce 223 ** Parsing conflict **
               T_NOT_IDENTICAL shift  61
               T_NOT_IDENTICAL reduce 223 ** Parsing conflict **
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                     {default} reduce 223

State 254:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
    (224) binaryOp ::= expr T_NOT_IDENTICAL expr *
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                       T_EQUAL shift  58
                       T_EQUAL reduce 224 ** Parsing conflict **
                   T_NOT_EQUAL shift  59
                   T_NOT_EQUAL reduce 224 ** Parsing conflict **
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
                   T_IDENTICAL reduce 224 ** Parsing conflict **
               T_NOT_IDENTICAL shift  61
               T_NOT_IDENTICAL reduce 224 ** Parsing conflict **
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                     {default} reduce 224

State 255:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
    (227) binaryOp ::= expr T_AND expr *
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                       T_EQUAL shift  58
                   T_NOT_EQUAL shift  59
                         T_DOT shift  36
                T_GREATER_THAN shift  54
                   T_LESS_THAN shift  55
            T_GREATER_OR_EQUAL shift  56
               T_LESS_OR_EQUAL shift  57
                   T_IDENTICAL shift  60
               T_NOT_IDENTICAL shift  61
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                     {default} reduce 227

State 256:
    (121) baseExpr ::= functionInvoke *
    (268) varWithFunCalls ::= functionInvoke *

                  T_RIGHTPAREN reduce 268 ** Parsing conflict **
                  T_RIGHTCURLY reduce 268 ** Parsing conflict **
                 T_RIGHTSQUARE reduce 268 ** Parsing conflict **
                       T_COMMA reduce 268 ** Parsing conflict **
                    T_ARROWKEY reduce 268 ** Parsing conflict **
                         T_AND reduce 268 ** Parsing conflict **
                      T_ASSIGN reduce 268
                 T_BOOLEAN_AND reduce 268 ** Parsing conflict **
             T_BOOLEAN_AND_LIT reduce 268 ** Parsing conflict **
                  T_BOOLEAN_OR reduce 268 ** Parsing conflict **
              T_BOOLEAN_OR_LIT reduce 268 ** Parsing conflict **
             T_BOOLEAN_XOR_LIT reduce 268 ** Parsing conflict **
                       T_EQUAL reduce 268 ** Parsing conflict **
                   T_NOT_EQUAL reduce 268 ** Parsing conflict **
                  T_CLASSDEREF reduce 268
                          T_AS reduce 268 ** Parsing conflict **
                         T_DOT reduce 268 ** Parsing conflict **
                T_GREATER_THAN reduce 268 ** Parsing conflict **
                   T_LESS_THAN reduce 268 ** Parsing conflict **
            T_GREATER_OR_EQUAL reduce 268 ** Parsing conflict **
               T_LESS_OR_EQUAL reduce 268 ** Parsing conflict **
                   T_IDENTICAL reduce 268 ** Parsing conflict **
               T_NOT_IDENTICAL reduce 268 ** Parsing conflict **
                    T_QUESTION reduce 268 ** Parsing conflict **
                       T_COLON reduce 268 ** Parsing conflict **
                         T_INC reduce 268
                         T_DEC reduce 268
                       T_MINUS reduce 268 ** Parsing conflict **
                        T_PLUS reduce 268 ** Parsing conflict **
                         T_DIV reduce 268 ** Parsing conflict **
                         T_MOD reduce 268 ** Parsing conflict **
                        T_MULT reduce 268 ** Parsing conflict **
                  T_INSTANCEOF reduce 268 ** Parsing conflict **
                  T_PLUS_EQUAL reduce 268
                 T_MINUS_EQUAL reduce 268
                    T_SR_EQUAL reduce 268
                    T_SL_EQUAL reduce 268
                   T_XOR_EQUAL reduce 268
                    T_OR_EQUAL reduce 268
                   T_AND_EQUAL reduce 268
                   T_MOD_EQUAL reduce 268
                T_CONCAT_EQUAL reduce 268
                   T_DIV_EQUAL reduce 268
                   T_MUL_EQUAL reduce 268
                          T_SR reduce 268 ** Parsing conflict **
                          T_SL reduce 268 ** Parsing conflict **
                        T_PIPE reduce 268 ** Parsing conflict **
                       T_CARET reduce 268 ** Parsing conflict **
                        T_SEMI reduce 268 ** Parsing conflict **
                     {default} reduce 121

State 257:
          postOp ::= var * T_INC
          postOp ::= var * T_DEC
          assignment ::= var * T_ASSIGN expr
          assignment ::= var * T_ASSIGN T_AND var
          assignment ::= var * T_ASSIGN T_AND functionInvoke
          assignment ::= var * T_ASSIGN T_AND constructorInvoke
          opAssignment ::= var * T_AND_EQUAL expr
          opAssignment ::= var * T_OR_EQUAL expr
          opAssignment ::= var * T_XOR_EQUAL expr
          opAssignment ::= var * T_CONCAT_EQUAL expr
          opAssignment ::= var * T_DIV_EQUAL expr
          opAssignment ::= var * T_MUL_EQUAL expr
          opAssignment ::= var * T_PLUS_EQUAL expr
          opAssignment ::= var * T_MINUS_EQUAL expr
          opAssignment ::= var * T_MOD_EQUAL expr
          opAssignment ::= var * T_SL_EQUAL expr
          opAssignment ::= var * T_SR_EQUAL expr
    (256) rVar ::= var *

                      T_ASSIGN shift  30
                         T_INC shift  458
                         T_DEC shift  459
                  T_PLUS_EQUAL shift  88
                 T_MINUS_EQUAL shift  89
                    T_SR_EQUAL shift  92
                    T_SL_EQUAL shift  91
                   T_XOR_EQUAL shift  84
                    T_OR_EQUAL shift  83
                   T_AND_EQUAL shift  82
                   T_MOD_EQUAL shift  90
                T_CONCAT_EQUAL shift  85
                   T_DIV_EQUAL shift  86
                   T_MUL_EQUAL shift  87
                     {default} reduce 256

State 258:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
    (217) binaryOp ::= expr T_GREATER_THAN expr *
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_DOT shift  36
                T_GREATER_THAN shift  54
                T_GREATER_THAN reduce 217 ** Parsing conflict **
                   T_LESS_THAN shift  55
                   T_LESS_THAN reduce 217 ** Parsing conflict **
            T_GREATER_OR_EQUAL shift  56
            T_GREATER_OR_EQUAL reduce 217 ** Parsing conflict **
               T_LESS_OR_EQUAL shift  57
               T_LESS_OR_EQUAL reduce 217 ** Parsing conflict **
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                     {default} reduce 217

State 259:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
    (218) binaryOp ::= expr T_LESS_THAN expr *
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_DOT shift  36
                T_GREATER_THAN shift  54
                T_GREATER_THAN reduce 218 ** Parsing conflict **
                   T_LESS_THAN shift  55
                   T_LESS_THAN reduce 218 ** Parsing conflict **
            T_GREATER_OR_EQUAL shift  56
            T_GREATER_OR_EQUAL reduce 218 ** Parsing conflict **
               T_LESS_OR_EQUAL shift  57
               T_LESS_OR_EQUAL reduce 218 ** Parsing conflict **
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                     {default} reduce 218

State 260:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
    (219) binaryOp ::= expr T_GREATER_OR_EQUAL expr *
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_DOT shift  36
                T_GREATER_THAN shift  54
                T_GREATER_THAN reduce 219 ** Parsing conflict **
                   T_LESS_THAN shift  55
                   T_LESS_THAN reduce 219 ** Parsing conflict **
            T_GREATER_OR_EQUAL shift  56
            T_GREATER_OR_EQUAL reduce 219 ** Parsing conflict **
               T_LESS_OR_EQUAL shift  57
               T_LESS_OR_EQUAL reduce 219 ** Parsing conflict **
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                     {default} reduce 219

State 261:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
    (220) binaryOp ::= expr T_LESS_OR_EQUAL expr *
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_DOT shift  36
                T_GREATER_THAN shift  54
                T_GREATER_THAN reduce 220 ** Parsing conflict **
                   T_LESS_THAN shift  55
                   T_LESS_THAN reduce 220 ** Parsing conflict **
            T_GREATER_OR_EQUAL shift  56
            T_GREATER_OR_EQUAL reduce 220 ** Parsing conflict **
               T_LESS_OR_EQUAL shift  57
               T_LESS_OR_EQUAL reduce 220 ** Parsing conflict **
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                          T_SR shift  66
                          T_SL shift  65
                     {default} reduce 220

State 262:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
    (228) binaryOp ::= expr T_SL expr *
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_DOT shift  36
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                     {default} reduce 228

State 263:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
    (229) binaryOp ::= expr T_SR expr *
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_DOT shift  36
                       T_MINUS shift  53
                        T_PLUS shift  52
                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                     {default} reduce 229

State 264:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
    (215) binaryOp ::= expr T_PLUS expr *
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                     {default} reduce 215

State 265:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
    (216) binaryOp ::= expr T_MINUS expr *
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                     {default} reduce 216

State 266:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (202) unaryOp ::= T_PLUS expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                     {default} reduce 202

State 267:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (203) unaryOp ::= T_MINUS expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                     {default} reduce 203

State 268:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
    (206) binaryOp ::= expr T_DOT expr *
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                         T_DIV shift  47
                         T_MOD shift  49
                        T_MULT shift  51
                  T_INSTANCEOF shift  126
                     {default} reduce 206

State 269:
          switchCaseList ::= T_LEFTCURLY caseList * T_RIGHTCURLY
          caseList ::= caseList * T_CASE expr caseSeparator statement_list
          caseList ::= caseList * T_DEFAULT caseSeparator statement_list

                  T_RIGHTCURLY shift  506
                        T_CASE shift  109
                     T_DEFAULT shift  165

State 270:
          switchCaseList ::= T_LEFTCURLY T_SEMI caseList * T_RIGHTCURLY
          caseList ::= caseList * T_CASE expr caseSeparator statement_list
          caseList ::= caseList * T_DEFAULT caseSeparator statement_list

                  T_RIGHTCURLY shift  552
                        T_CASE shift  109
                     T_DEFAULT shift  165

State 271:
          switchCaseList ::= T_COLON caseList * T_ENDSWITCH
          caseList ::= caseList * T_CASE expr caseSeparator statement_list
          caseList ::= caseList * T_DEFAULT caseSeparator statement_list

                   T_ENDSWITCH shift  553
                        T_CASE shift  109
                     T_DEFAULT shift  165

State 272:
          switchCaseList ::= T_COLON T_SEMI caseList * T_ENDSWITCH
          caseList ::= caseList * T_CASE expr caseSeparator statement_list
          caseList ::= caseList * T_DEFAULT caseSeparator statement_list

                   T_ENDSWITCH shift  554
                        T_CASE shift  109
                     T_DEFAULT shift  165

State 273:
          builtin ::= T_ISSET T_LEFTPAREN commaVarList * T_RIGHTPAREN
          commaVarList ::= commaVarList * T_COMMA var

                  T_RIGHTPAREN shift  415
                       T_COMMA shift  121

State 274:
    (272) refVar ::= T_VARIABLE arrayIndices *
          arrayIndices ::= arrayIndices * T_LEFTSQUARE expr T_RIGHTSQUARE
          arrayIndices ::= arrayIndices * T_LEFTCURLY expr T_RIGHTCURLY
          arrayIndices ::= arrayIndices * T_LEFTSQUARE T_RIGHTSQUARE

                   T_LEFTCURLY shift  96
                  T_LEFTSQUARE shift  28
                     {default} reduce 272

State 275:
          builtin ::= T_UNSET T_LEFTPAREN commaVarList * T_RIGHTPAREN
          commaVarList ::= commaVarList * T_COMMA var

                  T_RIGHTPAREN shift  419
                       T_COMMA shift  121

State 276:
    (170) scalar ::= T_IDENTIFIER *
          scalar ::= T_IDENTIFIER * T_DBL_COLON T_IDENTIFIER
          staticMember ::= T_IDENTIFIER * T_DBL_COLON varNoObjects
          functionInvoke ::= T_IDENTIFIER * T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= T_IDENTIFIER * T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
    (293) literalID ::= T_IDENTIFIER *

                   T_LEFTPAREN reduce 293
                   T_DBL_COLON shift  143
                     {default} reduce 170

State 277:
          listAssignment ::= T_LIST T_LEFTPAREN listAssignmentList * T_RIGHTPAREN T_ASSIGN expr
          listAssignmentList ::= listAssignmentList * T_COMMA listElement

                  T_RIGHTPAREN shift  307
                       T_COMMA shift  114

State 278:
          listAssignmentList ::= listAssignmentList * T_COMMA listElement
          listElement ::= T_LIST T_LEFTPAREN listAssignmentList * T_RIGHTPAREN

                  T_RIGHTPAREN shift  465
                       T_COMMA shift  114

State 279:
    (274) objProperty ::= T_IDENTIFIER arrayIndices *
          arrayIndices ::= arrayIndices * T_LEFTSQUARE expr T_RIGHTSQUARE
          arrayIndices ::= arrayIndices * T_LEFTCURLY expr T_RIGHTCURLY
          arrayIndices ::= arrayIndices * T_LEFTSQUARE T_RIGHTSQUARE

                   T_LEFTCURLY shift  96
                  T_LEFTSQUARE shift  28
                     {default} reduce 274

State 280:
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS var * T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS var * T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS var * T_ARROWKEY T_AND var T_RIGHTPAREN statement

                  T_RIGHTPAREN shift  5
                    T_ARROWKEY shift  119

State 281:
     (65) staticDecl ::= T_STATIC staticVarList *
          staticDecl ::= T_STATIC staticVarList * T_ASSIGN staticScalar
          staticVarList ::= staticVarList * T_COMMA T_VARIABLE

                       T_COMMA shift  341
                      T_ASSIGN shift  132
                     {default} reduce 65

State 282:
          formalParam ::= maybeHint * T_VARIABLE
          formalParam ::= maybeHint * T_AND T_VARIABLE
          formalParam ::= maybeHint * T_VARIABLE T_ASSIGN staticScalar
          formalParam ::= maybeHint * T_AND T_VARIABLE T_ASSIGN staticScalar

                         T_AND shift  344
                    T_VARIABLE shift  343

State 283:
          classStatement ::= classVarFlags classVar * T_SEMI
          classVar ::= classVar * T_COMMA T_VARIABLE
          classVar ::= classVar * T_COMMA T_VARIABLE T_ASSIGN staticScalar

                       T_COMMA shift  353
                        T_SEMI shift  525

State 284:
          classStatement ::= classConstantDecl * T_SEMI
          classConstantDecl ::= classConstantDecl * T_COMMA T_IDENTIFIER T_ASSIGN staticScalar

                       T_COMMA shift  356
                        T_SEMI shift  528

State 285:
          classStatement ::= methodFlags * T_FUNCTION signature methodBody
          classStatement ::= methodFlags * T_AND T_FUNCTION signature methodBody

                         T_AND shift  358
                    T_FUNCTION shift  163

State 286:
          statement ::= staticDecl * T_SEMI

                        T_SEMI shift  390

State 287:
          statement ::= echo * T_SEMI

                        T_SEMI shift  391

State 288:
          statement ::= throw * T_SEMI

                        T_SEMI shift  392

State 289:
    (135) builtin ::= T_EXIT *
          builtin ::= T_EXIT * T_LEFTPAREN T_RIGHTPAREN
          builtin ::= T_EXIT * T_LEFTPAREN expr T_RIGHTPAREN

                   T_LEFTPAREN shift  27
                     {default} reduce 135

State 290:
          builtin ::= T_EMPTY * T_LEFTPAREN var T_RIGHTPAREN

                   T_LEFTPAREN shift  120

State 291:
          builtin ::= T_EMPTY T_LEFTPAREN var * T_RIGHTPAREN

                  T_RIGHTPAREN shift  412

State 292:
          builtin ::= T_ISSET * T_LEFTPAREN commaVarList T_RIGHTPAREN

                   T_LEFTPAREN shift  115

State 293:
          builtin ::= T_UNSET * T_LEFTPAREN commaVarList T_RIGHTPAREN

                   T_LEFTPAREN shift  116

State 294:
          staticMember ::= T_IDENTIFIER * T_DBL_COLON varNoObjects
          functionInvoke ::= T_IDENTIFIER * T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN
          functionInvoke ::= T_IDENTIFIER * T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN
    (293) literalID ::= T_IDENTIFIER *

                   T_DBL_COLON shift  142
                     {default} reduce 293

State 295:
    (266) staticMember ::= T_IDENTIFIER T_DBL_COLON varNoObjects *
          functionInvoke ::= T_IDENTIFIER T_DBL_COLON varNoObjects * T_LEFTPAREN argList T_RIGHTPAREN

                   T_LEFTPAREN shift  20
                   T_LEFTPAREN reduce 266 ** Parsing conflict **
                     {default} reduce 266

State 296:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
    (214) binaryOp ::= expr T_MULT expr *
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                  T_INSTANCEOF shift  126
                     {default} reduce 214

State 297:
          staticMember ::= T_IDENTIFIER * T_DBL_COLON varNoObjects
    (293) literalID ::= T_IDENTIFIER *

                   T_DBL_COLON shift  147
                     {default} reduce 293

State 298:
    (171) scalar ::= T_IDENTIFIER T_DBL_COLON T_IDENTIFIER *
          functionInvoke ::= T_IDENTIFIER T_DBL_COLON T_IDENTIFIER * T_LEFTPAREN argList T_RIGHTPAREN

                   T_LEFTPAREN shift  21
                     {default} reduce 171

State 299:
          literalArray ::= T_ARRAY * T_LEFTPAREN arrayItemList T_RIGHTPAREN

                   T_LEFTPAREN shift  15

State 300:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (204) unaryOp ::= T_BOOLEAN_NOT expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                  T_INSTANCEOF shift  126
                     {default} reduce 204

State 301:
    (267) varWithFunCalls ::= baseVar *
    (295) maybeDynamicID ::= baseVar *

                   T_LEFTPAREN reduce 295
                     {default} reduce 267

State 302:
    (269) baseVar ::= varNoObjects *
          functionInvoke ::= varNoObjects * T_LEFTPAREN argList T_RIGHTPAREN

                   T_LEFTPAREN shift  23
                   T_LEFTPAREN reduce 269 ** Parsing conflict **
                     {default} reduce 269

State 303:
          functionInvoke ::= maybeDynamicID * T_LEFTPAREN argList T_RIGHTPAREN

                   T_LEFTPAREN shift  24

State 304:
    (237) assignment ::= var T_ASSIGN T_AND functionInvoke *
    (268) varWithFunCalls ::= functionInvoke *

                  T_RIGHTPAREN reduce 268 ** Parsing conflict **
                  T_RIGHTCURLY reduce 268 ** Parsing conflict **
                 T_RIGHTSQUARE reduce 268 ** Parsing conflict **
                       T_COMMA reduce 268 ** Parsing conflict **
                    T_ARROWKEY reduce 268 ** Parsing conflict **
                         T_AND reduce 268 ** Parsing conflict **
                 T_BOOLEAN_AND reduce 268 ** Parsing conflict **
             T_BOOLEAN_AND_LIT reduce 268 ** Parsing conflict **
                  T_BOOLEAN_OR reduce 268 ** Parsing conflict **
              T_BOOLEAN_OR_LIT reduce 268 ** Parsing conflict **
             T_BOOLEAN_XOR_LIT reduce 268 ** Parsing conflict **
                       T_EQUAL reduce 268 ** Parsing conflict **
                   T_NOT_EQUAL reduce 268 ** Parsing conflict **
                  T_CLASSDEREF reduce 268
                          T_AS reduce 268 ** Parsing conflict **
                         T_DOT reduce 268 ** Parsing conflict **
                T_GREATER_THAN reduce 268 ** Parsing conflict **
                   T_LESS_THAN reduce 268 ** Parsing conflict **
            T_GREATER_OR_EQUAL reduce 268 ** Parsing conflict **
               T_LESS_OR_EQUAL reduce 268 ** Parsing conflict **
                   T_IDENTICAL reduce 268 ** Parsing conflict **
               T_NOT_IDENTICAL reduce 268 ** Parsing conflict **
                    T_QUESTION reduce 268 ** Parsing conflict **
                       T_COLON reduce 268 ** Parsing conflict **
                       T_MINUS reduce 268 ** Parsing conflict **
                        T_PLUS reduce 268 ** Parsing conflict **
                         T_DIV reduce 268 ** Parsing conflict **
                         T_MOD reduce 268 ** Parsing conflict **
                        T_MULT reduce 268 ** Parsing conflict **
                  T_INSTANCEOF reduce 268 ** Parsing conflict **
                          T_SR reduce 268 ** Parsing conflict **
                          T_SL reduce 268 ** Parsing conflict **
                        T_PIPE reduce 268 ** Parsing conflict **
                       T_CARET reduce 268 ** Parsing conflict **
                        T_SEMI reduce 268 ** Parsing conflict **
                     {default} reduce 237

State 305:
          constructorInvoke ::= T_NEW maybeDynamicID * T_LEFTPAREN argList T_RIGHTPAREN
    (292) constructorInvoke ::= T_NEW maybeDynamicID *

                   T_LEFTPAREN shift  25
                     {default} reduce 292

State 306:
          listAssignment ::= T_LIST * T_LEFTPAREN listAssignmentList T_RIGHTPAREN T_ASSIGN expr

                   T_LEFTPAREN shift  111

State 307:
          listAssignment ::= T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN * T_ASSIGN expr

                      T_ASSIGN shift  81

State 308:
          listElement ::= T_LIST * T_LEFTPAREN listAssignmentList T_RIGHTPAREN

                   T_LEFTPAREN shift  112

State 309:
          constructorInvoke ::= T_NEW maybeDynamicID T_LEFTPAREN argList * T_RIGHTPAREN

                  T_RIGHTPAREN shift  466

State 310:
          functionInvoke ::= maybeDynamicID T_LEFTPAREN argList * T_RIGHTPAREN

                  T_RIGHTPAREN shift  467

State 311:
          functionInvoke ::= varNoObjects T_LEFTPAREN argList * T_RIGHTPAREN

                  T_RIGHTPAREN shift  468

State 312:
          literalArray ::= T_ARRAY T_LEFTPAREN arrayItemList * T_RIGHTPAREN

                  T_RIGHTPAREN shift  470

State 313:
          functionInvoke ::= T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList * T_RIGHTPAREN

                  T_RIGHTPAREN shift  472

State 314:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
    (213) binaryOp ::= expr T_MOD expr *
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                  T_INSTANCEOF shift  126
                     {default} reduce 213

State 315:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
    (212) binaryOp ::= expr T_DIV expr *
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                  T_INSTANCEOF shift  126
                     {default} reduce 212

State 316:
          functionInvoke ::= T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList * T_RIGHTPAREN

                  T_RIGHTPAREN shift  473

State 317:
          functionInvoke ::= T_IDENTIFIER T_DBL_COLON T_IDENTIFIER * T_LEFTPAREN argList T_RIGHTPAREN

                   T_LEFTPAREN shift  21

State 318:
          maybeMethodInvoke ::= T_LEFTPAREN argList * T_RIGHTPAREN

                  T_RIGHTPAREN shift  481

State 319:
          statement ::= return * T_SEMI

                        T_SEMI shift  484

State 320:
          statement ::= break * T_SEMI

                        T_SEMI shift  485

State 321:
          statement ::= continue * T_SEMI

                        T_SEMI shift  486

State 322:
          statement ::= global * T_SEMI

                        T_SEMI shift  487

State 323:
     (24) echo ::= T_ECHO commaExprList *
          commaExprList ::= commaExprList * T_COMMA expr

                       T_COMMA shift  99
                     {default} reduce 24

State 324:
     (32) global ::= T_GLOBAL globalVarList *
          globalVarList ::= globalVarList * T_COMMA globalVar

                       T_COMMA shift  160
                     {default} reduce 32

State 325:
          catch ::= T_CATCH * T_LEFTPAREN T_IDENTIFIER T_VARIABLE T_RIGHTPAREN statementBlock

                   T_LEFTPAREN shift  326

State 326:
          catch ::= T_CATCH T_LEFTPAREN * T_IDENTIFIER T_VARIABLE T_RIGHTPAREN statementBlock

                  T_IDENTIFIER shift  327

State 327:
          catch ::= T_CATCH T_LEFTPAREN T_IDENTIFIER * T_VARIABLE T_RIGHTPAREN statementBlock

                    T_VARIABLE shift  328

State 328:
          catch ::= T_CATCH T_LEFTPAREN T_IDENTIFIER T_VARIABLE * T_RIGHTPAREN statementBlock

                  T_RIGHTPAREN shift  172

State 329:
          ifBlock ::= T_IF * T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries
          ifBlock ::= T_IF * T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle

                   T_LEFTPAREN shift  104

State 330:
          forEach ::= T_FOREACH * T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement
          forEach ::= T_FOREACH * T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement
          forEach ::= T_FOREACH * T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement
          forEach ::= T_FOREACH * T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement

                   T_LEFTPAREN shift  105

State 331:
          forStmt ::= T_FOR * T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement

                   T_LEFTPAREN shift  16

State 332:
          forStmt ::= T_FOR T_LEFTPAREN forExpr * T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement

                        T_SEMI shift  17

State 333:
          forStmt ::= T_FOR T_LEFTPAREN forExpr T_SEMI forExpr * T_SEMI forExpr T_RIGHTPAREN statement

                        T_SEMI shift  18

State 334:
          forStmt ::= T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr * T_RIGHTPAREN statement

                  T_RIGHTPAREN shift  6

State 335:
          doStmt ::= T_DO statement * T_WHILE T_LEFTPAREN expr T_RIGHTPAREN

                       T_WHILE shift  336

State 336:
          doStmt ::= T_DO statement T_WHILE * T_LEFTPAREN expr T_RIGHTPAREN

                   T_LEFTPAREN shift  106

State 337:
          whileStmt ::= T_WHILE * T_LEFTPAREN expr T_RIGHTPAREN statement

                   T_LEFTPAREN shift  107

State 338:
          switchStmt ::= T_SWITCH * T_LEFTPAREN expr T_RIGHTPAREN switchCaseList

                   T_LEFTPAREN shift  108

State 339:
    (170) scalar ::= T_IDENTIFIER *
          scalar ::= T_IDENTIFIER * T_DBL_COLON T_IDENTIFIER

                   T_DBL_COLON shift  340
                     {default} reduce 170

State 340:
          scalar ::= T_IDENTIFIER T_DBL_COLON * T_IDENTIFIER

                  T_IDENTIFIER shift  508

State 341:
          staticVarList ::= staticVarList T_COMMA * T_VARIABLE

                    T_VARIABLE shift  513

State 342:
          signature ::= T_IDENTIFIER * T_LEFTPAREN formalParamList T_RIGHTPAREN

                   T_LEFTPAREN shift  144

State 343:
     (67) formalParam ::= maybeHint T_VARIABLE *
          formalParam ::= maybeHint T_VARIABLE * T_ASSIGN staticScalar

                      T_ASSIGN shift  135
                     {default} reduce 67

State 344:
          formalParam ::= maybeHint T_AND * T_VARIABLE
          formalParam ::= maybeHint T_AND * T_VARIABLE T_ASSIGN staticScalar

                    T_VARIABLE shift  345

State 345:
     (68) formalParam ::= maybeHint T_AND T_VARIABLE *
          formalParam ::= maybeHint T_AND T_VARIABLE * T_ASSIGN staticScalar

                      T_ASSIGN shift  136
                     {default} reduce 68

State 346:
     (74) formalParamList ::= formalParam *
          formalParamList ::= formalParam * T_COMMA formalParamList

                       T_COMMA shift  145
                     {default} reduce 74

State 347:
          signature ::= T_IDENTIFIER T_LEFTPAREN formalParamList * T_RIGHTPAREN

                  T_RIGHTPAREN shift  520

State 348:
          signature ::= T_AND * T_IDENTIFIER T_LEFTPAREN formalParamList T_RIGHTPAREN

                  T_IDENTIFIER shift  349

State 349:
          signature ::= T_AND T_IDENTIFIER * T_LEFTPAREN formalParamList T_RIGHTPAREN

                   T_LEFTPAREN shift  146

State 350:
          signature ::= T_AND T_IDENTIFIER T_LEFTPAREN formalParamList * T_RIGHTPAREN

                  T_RIGHTPAREN shift  521

State 351:
          classDecl ::= T_CLASS * T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY

                  T_IDENTIFIER shift  176

State 352:
          classDecl ::= T_CLASS T_IDENTIFIER classExtends classImplements * T_LEFTCURLY classStatements T_RIGHTCURLY

                   T_LEFTCURLY shift  189

State 353:
          classVar ::= classVar T_COMMA * T_VARIABLE
          classVar ::= classVar T_COMMA * T_VARIABLE T_ASSIGN staticScalar

                    T_VARIABLE shift  354

State 354:
     (90) classVar ::= classVar T_COMMA T_VARIABLE *
          classVar ::= classVar T_COMMA T_VARIABLE * T_ASSIGN staticScalar

                      T_ASSIGN shift  137
                     {default} reduce 90

State 355:
     (92) classVar ::= T_VARIABLE *
          classVar ::= T_VARIABLE * T_ASSIGN staticScalar

                      T_ASSIGN shift  138
                     {default} reduce 92

State 356:
          classConstantDecl ::= classConstantDecl T_COMMA * T_IDENTIFIER T_ASSIGN staticScalar

                  T_IDENTIFIER shift  357

State 357:
          classConstantDecl ::= classConstantDecl T_COMMA T_IDENTIFIER * T_ASSIGN staticScalar

                      T_ASSIGN shift  139

State 358:
          classStatement ::= methodFlags T_AND * T_FUNCTION signature methodBody

                    T_FUNCTION shift  164

State 359:
          classConstantDecl ::= T_CONST * T_IDENTIFIER T_ASSIGN staticScalar

                  T_IDENTIFIER shift  360

State 360:
          classConstantDecl ::= T_CONST T_IDENTIFIER * T_ASSIGN staticScalar

                      T_ASSIGN shift  140

State 361:
    (115) classImplements ::= T_IMPLEMENTS idList *
          idList ::= idList * T_COMMA T_IDENTIFIER

                       T_COMMA shift  362
                     {default} reduce 115

State 362:
          idList ::= idList T_COMMA * T_IDENTIFIER

                  T_IDENTIFIER shift  544

State 363:
          classExtends ::= T_EXTENDS * T_IDENTIFIER

                  T_IDENTIFIER shift  546

State 364:
          classDecl ::= T_FINAL * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY

                       T_CLASS shift  365

State 365:
          classDecl ::= T_FINAL T_CLASS * T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY

                  T_IDENTIFIER shift  180

State 366:
          classDecl ::= T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements * T_LEFTCURLY classStatements T_RIGHTCURLY

                   T_LEFTCURLY shift  190

State 367:
          classDecl ::= T_ABSTRACT * T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY

                       T_CLASS shift  368

State 368:
          classDecl ::= T_ABSTRACT T_CLASS * T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY

                  T_IDENTIFIER shift  182

State 369:
          classDecl ::= T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements * T_LEFTCURLY classStatements T_RIGHTCURLY

                   T_LEFTCURLY shift  191

State 370:
          classDecl ::= T_INTERFACE * T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY

                  T_IDENTIFIER shift  184

State 371:
          classDecl ::= T_INTERFACE T_IDENTIFIER interfaceExtends * T_LEFTCURLY classStatements T_RIGHTCURLY

                   T_LEFTCURLY shift  192

State 372:
    (113) interfaceExtends ::= T_EXTENDS idList *
          idList ::= idList * T_COMMA T_IDENTIFIER

                       T_COMMA shift  362
                     {default} reduce 113

State 373:
     (52) forExpr ::= commaExprList *
          commaExprList ::= commaExprList * T_COMMA expr

                       T_COMMA shift  99
                     {default} reduce 52

State 374:
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var * T_RIGHTPAREN statement

                  T_RIGHTPAREN shift  11

State 375:
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var * T_RIGHTPAREN statement

                  T_RIGHTPAREN shift  12

State 376:
          forEach ::= T_FOREACH T_LEFTPAREN expr T_AS T_AND var * T_RIGHTPAREN statement

                  T_RIGHTPAREN shift  13

State 377:
          elseSeries ::= T_ELSEIF * T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle
          elseSeries ::= T_ELSEIF * T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries

                   T_LEFTPAREN shift  110

State 378:
      (2) statement_list ::= statement_list statement *

                     {default} reduce 2

State 379:
      (3) statement ::= statementBlock *

                     {default} reduce 3

State 380:
      (4) statement ::= inlineHTML *

                     {default} reduce 4

State 381:
      (5) statement ::= functionDecl *

                     {default} reduce 5

State 382:
      (6) statement ::= classDecl *

                     {default} reduce 6

State 383:
      (7) statement ::= ifBlock *

                     {default} reduce 7

State 384:
      (8) statement ::= forEach *

                     {default} reduce 8

State 385:
      (9) statement ::= forStmt *

                     {default} reduce 9

State 386:
     (10) statement ::= doStmt *

                     {default} reduce 10

State 387:
     (11) statement ::= whileStmt *

                     {default} reduce 11

State 388:
     (12) statement ::= switchStmt *

                     {default} reduce 12

State 389:
     (13) statement ::= tryCatch *

                     {default} reduce 13

State 390:
     (14) statement ::= staticDecl T_SEMI *

                     {default} reduce 14

State 391:
     (15) statement ::= echo T_SEMI *

                     {default} reduce 15

State 392:
     (16) statement ::= throw T_SEMI *

                     {default} reduce 16

State 393:
     (17) statement ::= expr T_SEMI *

                     {default} reduce 17

State 394:
    (118) baseExpr ::= assignment *

                     {default} reduce 118

State 395:
    (119) baseExpr ::= opAssignment *

                     {default} reduce 119

State 396:
    (120) baseExpr ::= listAssignment *

                     {default} reduce 120

State 397:
    (122) baseExpr ::= constructorInvoke *

                     {default} reduce 122

State 398:
    (123) baseExpr ::= unaryOp *

                     {default} reduce 123

State 399:
    (124) baseExpr ::= binaryOp *

                     {default} reduce 124

State 400:
    (125) baseExpr ::= builtin *

                     {default} reduce 125

State 401:
    (126) baseExpr ::= typeCast *

                     {default} reduce 126

State 402:
    (127) baseExpr ::= preOp *

                     {default} reduce 127

State 403:
    (128) baseExpr ::= postOp *

                     {default} reduce 128

State 404:
    (129) baseExpr ::= conditionalExpr *

                     {default} reduce 129

State 405:
    (130) baseExpr ::= scalar *

                     {default} reduce 130

State 406:
    (131) baseExpr ::= literalArray *

                     {default} reduce 131

State 407:
    (132) baseExpr ::= T_LEFTPAREN expr T_RIGHTPAREN *

                     {default} reduce 132

State 408:
    (133) expr ::= baseExpr *

                     {default} reduce 133

State 409:
    (134) expr ::= rVar *

                     {default} reduce 134

State 410:
    (136) builtin ::= T_EXIT T_LEFTPAREN T_RIGHTPAREN *

                     {default} reduce 136

State 411:
    (137) builtin ::= T_EXIT T_LEFTPAREN expr T_RIGHTPAREN *

                     {default} reduce 137

State 412:
    (138) builtin ::= T_EMPTY T_LEFTPAREN var T_RIGHTPAREN *

                     {default} reduce 138

State 413:
    (259) varPropertyList ::= varPropertyList varProperty *

                     {default} reduce 259

State 414:
    (261) varProperty ::= T_CLASSDEREF objProperty maybeMethodInvoke *

                     {default} reduce 261

State 415:
    (139) builtin ::= T_ISSET T_LEFTPAREN commaVarList T_RIGHTPAREN *

                     {default} reduce 139

State 416:
    (149) commaVarList ::= commaVarList T_COMMA var *

                     {default} reduce 149

State 417:
    (264) varNoObjects ::= refVar *

                     {default} reduce 264

State 418:
    (265) varNoObjects ::= varVar refVar *

                     {default} reduce 265

State 419:
    (140) builtin ::= T_UNSET T_LEFTPAREN commaVarList T_RIGHTPAREN *

                     {default} reduce 140

State 420:
    (148) commaVarList ::= var *

                     {default} reduce 148

State 421:
    (142) builtin ::= T_CLONE expr *
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                     {default} reduce 142

State 422:
    (147) builtin ::= T_AT expr *
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                     {default} reduce 147

State 423:
    (230) binaryOp ::= expr T_INSTANCEOF maybeDynamicID *

                     {default} reduce 230

State 424:
    (266) staticMember ::= T_IDENTIFIER T_DBL_COLON varNoObjects *

                     {default} reduce 266

State 425:
    (276) varVar ::= T_DOLLAR *

                     {default} reduce 276

State 426:
    (269) baseVar ::= varNoObjects *

                     {default} reduce 269

State 427:
    (270) baseVar ::= staticMember *

                     {default} reduce 270

State 428:
    (294) maybeDynamicID ::= literalID *

                     {default} reduce 294

State 429:
    (295) maybeDynamicID ::= baseVar *

                     {default} reduce 295

State 430:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (159) typeCast ::= T_FLOAT_CAST expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                     {default} reduce 159

State 431:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (160) typeCast ::= T_INT_CAST expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                     {default} reduce 160

State 432:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (161) typeCast ::= T_STRING_CAST expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                     {default} reduce 161

State 433:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (162) typeCast ::= T_BINARY_CAST expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                     {default} reduce 162

State 434:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (163) typeCast ::= T_UNICODE_CAST expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                     {default} reduce 163

State 435:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (164) typeCast ::= T_ARRAY_CAST expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                     {default} reduce 164

State 436:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (165) typeCast ::= T_OBJECT_CAST expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                     {default} reduce 165

State 437:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (166) typeCast ::= T_UNSET_CAST expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                     {default} reduce 166

State 438:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (167) typeCast ::= T_BOOL_CAST expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                     {default} reduce 167

State 439:
    (168) scalar ::= literal *

                     {default} reduce 168

State 440:
    (169) scalar ::= literalMagic *

                     {default} reduce 169

State 441:
    (176) literal ::= T_SQ_STRING *

                     {default} reduce 176

State 442:
    (177) literal ::= T_DQ_STRING *

                     {default} reduce 177

State 443:
    (178) literal ::= T_LNUMBER *

                     {default} reduce 178

State 444:
    (179) literal ::= T_DNUMBER *

                     {default} reduce 179

State 445:
    (180) literal ::= T_TRUE *

                     {default} reduce 180

State 446:
    (181) literal ::= T_FALSE *

                     {default} reduce 181

State 447:
    (182) literal ::= T_NULL *

                     {default} reduce 182

State 448:
    (183) literalMagic ::= T_MAGIC_FILE *

                     {default} reduce 183

State 449:
    (184) literalMagic ::= T_MAGIC_LINE *

                     {default} reduce 184

State 450:
    (185) literalMagic ::= T_MAGIC_CLASS *

                     {default} reduce 185

State 451:
    (186) literalMagic ::= T_MAGIC_METHOD *

                     {default} reduce 186

State 452:
    (187) literalMagic ::= T_MAGIC_FUNCTION *

                     {default} reduce 187

State 453:
    (188) literalMagic ::= T_MAGIC_NS *

                     {default} reduce 188

State 454:
          conditionalExpr ::= expr * T_QUESTION expr T_COLON expr
    (205) unaryOp ::= T_TILDE expr *
          binaryOp ::= expr * T_DOT expr
          binaryOp ::= expr * T_BOOLEAN_AND expr
          binaryOp ::= expr * T_BOOLEAN_AND_LIT expr
          binaryOp ::= expr * T_BOOLEAN_OR expr
          binaryOp ::= expr * T_BOOLEAN_OR_LIT expr
          binaryOp ::= expr * T_BOOLEAN_XOR_LIT expr
          binaryOp ::= expr * T_DIV expr
          binaryOp ::= expr * T_MOD expr
          binaryOp ::= expr * T_MULT expr
          binaryOp ::= expr * T_PLUS expr
          binaryOp ::= expr * T_MINUS expr
          binaryOp ::= expr * T_GREATER_THAN expr
          binaryOp ::= expr * T_LESS_THAN expr
          binaryOp ::= expr * T_GREATER_OR_EQUAL expr
          binaryOp ::= expr * T_LESS_OR_EQUAL expr
          binaryOp ::= expr * T_EQUAL expr
          binaryOp ::= expr * T_NOT_EQUAL expr
          binaryOp ::= expr * T_IDENTICAL expr
          binaryOp ::= expr * T_NOT_IDENTICAL expr
          binaryOp ::= expr * T_CARET expr
          binaryOp ::= expr * T_PIPE expr
          binaryOp ::= expr * T_AND expr
          binaryOp ::= expr * T_SL expr
          binaryOp ::= expr * T_SR expr
          binaryOp ::= expr * T_INSTANCEOF maybeDynamicID

                     {default} reduce 205

State 455:
    (231) preOp ::= T_INC var *

                     {default} reduce 231

State 456:
    (268) varWithFunCalls ::= functionInvoke *

                     {default} reduce 268

State 457:
    (232) preOp ::= T_DEC var *

                     {default} reduce 232

State 458:
    (233) postOp ::= var T_INC *

                     {default} reduce 233

State 459:
    (234) postOp ::= var T_DEC *

                     {default} reduce 234

State 460:
    (236) assignment ::= var T_ASSIGN T_AND var *

                     {default} reduce 236

State 461:
    (238) assignment ::= var T_ASSIGN T_AND constructorInvoke *

                     {default} reduce 238

State 462:
    (252) listAssignmentList ::= listAssignmentList T_COMMA listElement *

                     {default} reduce 252

State 463:
    (253) listElement ::= var *

                     {default} reduce 253

State 464:
    (251) listAssignmentList ::= listElement *

                     {default} reduce 251

State 465:
    (254) listElement ::= T_LIST T_LEFTPAREN listAssignmentList T_RIGHTPAREN *

                     {default} reduce 254

State 466:
    (291) constructorInvoke ::= T_NEW maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN *

                     {default} reduce 291

State 467:
    (287) functionInvoke ::= maybeDynamicID T_LEFTPAREN argList T_RIGHTPAREN *

                     {default} reduce 287

State 468:
    (290) functionInvoke ::= varNoObjects T_LEFTPAREN argList T_RIGHTPAREN *

                     {default} reduce 290

State 469:
    (190) arrayItemList ::= arrayItems maybeComma *

                     {default} reduce 190

State 470:
    (201) literalArray ::= T_ARRAY T_LEFTPAREN arrayItemList T_RIGHTPAREN *

                     {default} reduce 201

State 471:
    (279) argList ::= expr T_COMMA argList *

                     {default} reduce 279

State 472:
    (288) functionInvoke ::= T_IDENTIFIER T_DBL_COLON T_IDENTIFIER T_LEFTPAREN argList T_RIGHTPAREN *

                     {default} reduce 288

State 473:
    (289) functionInvoke ::= T_IDENTIFIER T_DBL_COLON varNoObjects T_LEFTPAREN argList T_RIGHTPAREN *

                     {default} reduce 289

State 474:
    (283) arrayIndices ::= arrayIndices T_LEFTSQUARE expr T_RIGHTSQUARE *

                     {default} reduce 283

State 475:
    (286) arrayIndices ::= arrayIndices T_LEFTSQUARE T_RIGHTSQUARE *

                     {default} reduce 286

State 476:
    (284) arrayIndices ::= arrayIndices T_LEFTCURLY expr T_RIGHTCURLY *

                     {default} reduce 284

State 477:
    (281) arrayIndices ::= T_LEFTSQUARE expr T_RIGHTSQUARE *

                     {default} reduce 281

State 478:
    (285) arrayIndices ::= T_LEFTSQUARE T_RIGHTSQUARE *

                     {default} reduce 285

State 479:
    (282) arrayIndices ::= T_LEFTCURLY expr T_RIGHTCURLY *

                     {default} reduce 282

State 480:
    (277) varVar ::= varVar T_DOLLAR *

                     {default} reduce 277

State 481:
    (262) maybeMethodInvoke ::= T_LEFTPAREN argList T_RIGHTPAREN *

                     {default} reduce 262

State 482:
    (275) objProperty ::= varNoObjects *

                     {default} reduce 275

State 483:
    (260) varPropertyList ::= varProperty *

                     {default} reduce 260

State 484:
     (18) statement ::= return T_SEMI *

                     {default} reduce 18

State 485:
     (19) statement ::= break T_SEMI *

                     {default} reduce 19

State 486:
     (20) statement ::= continue T_SEMI *

                     {default} reduce 20

State 487:
     (21) statement ::= global T_SEMI *

                     {default} reduce 21

State 488:
     (22) statement ::= T_SEMI *

                     {default} reduce 22

State 489:
     (23) statementBlock ::= T_LEFTCURLY statement_list T_RIGHTCURLY *

                     {default} reduce 23

State 490:
    (151) globalVarList ::= globalVarList T_COMMA globalVar *

                     {default} reduce 151

State 491:
    (152) globalVar ::= T_VARIABLE *

                     {default} reduce 152

State 492:
    (153) globalVar ::= T_DOLLAR rVar *

                     {default} reduce 153

State 493:
    (256) rVar ::= var *

                     {default} reduce 256

State 494:
    (150) globalVarList ::= globalVar *

                     {default} reduce 150

State 495:
     (33) inlineHTML ::= T_INLINE_HTML *

                     {default} reduce 33

State 496:
     (34) tryCatch ::= T_TRY statementBlock catch moreCatches *

                     {default} reduce 34

State 497:
     (38) nonEmptyCatches ::= nonEmptyCatches catch *

                     {default} reduce 38

State 498:
     (39) catch ::= T_CATCH T_LEFTPAREN T_IDENTIFIER T_VARIABLE T_RIGHTPAREN statementBlock *

                     {default} reduce 39

State 499:
     (37) nonEmptyCatches ::= catch *

                     {default} reduce 37

State 500:
     (41) elseSingle ::= T_ELSE statement *

                     {default} reduce 41

State 501:
     (46) forEach ::= T_FOREACH T_LEFTPAREN expr T_AS var T_RIGHTPAREN statement *

                     {default} reduce 46

State 502:
     (50) forStmt ::= T_FOR T_LEFTPAREN forExpr T_SEMI forExpr T_SEMI forExpr T_RIGHTPAREN statement *

                     {default} reduce 50

State 503:
     (53) doStmt ::= T_DO statement T_WHILE T_LEFTPAREN expr T_RIGHTPAREN *

                     {default} reduce 53

State 504:
     (54) whileStmt ::= T_WHILE T_LEFTPAREN expr T_RIGHTPAREN statement *

                     {default} reduce 54

State 505:
     (55) switchStmt ::= T_SWITCH T_LEFTPAREN expr T_RIGHTPAREN switchCaseList *

                     {default} reduce 55

State 506:
     (56) switchCaseList ::= T_LEFTCURLY caseList T_RIGHTCURLY *

                     {default} reduce 56

State 507:
     (66) staticDecl ::= T_STATIC staticVarList T_ASSIGN staticScalar *

                     {default} reduce 66

State 508:
    (171) scalar ::= T_IDENTIFIER T_DBL_COLON T_IDENTIFIER *

                     {default} reduce 171

State 509:
    (172) staticScalar ::= scalar *

                     {default} reduce 172

State 510:
    (173) staticScalar ::= literalArray *

                     {default} reduce 173

State 511:
    (174) staticScalar ::= T_PLUS staticScalar *

                     {default} reduce 174

State 512:
    (175) staticScalar ::= T_MINUS staticScalar *

                     {default} reduce 175

State 513:
    (155) staticVarList ::= staticVarList T_COMMA T_VARIABLE *

                     {default} reduce 155

State 514:
    (154) staticVarList ::= T_VARIABLE *

                     {default} reduce 154

State 515:
     (69) formalParam ::= maybeHint T_VARIABLE T_ASSIGN staticScalar *

                     {default} reduce 69

State 516:
     (70) formalParam ::= maybeHint T_AND T_VARIABLE T_ASSIGN staticScalar *

                     {default} reduce 70

State 517:
     (72) maybeHint ::= T_ARRAY *

                     {default} reduce 72

State 518:
     (73) maybeHint ::= T_IDENTIFIER *

                     {default} reduce 73

State 519:
     (75) formalParamList ::= formalParam T_COMMA formalParamList *

                     {default} reduce 75

State 520:
     (77) signature ::= T_IDENTIFIER T_LEFTPAREN formalParamList T_RIGHTPAREN *

                     {default} reduce 77

State 521:
     (78) signature ::= T_AND T_IDENTIFIER T_LEFTPAREN formalParamList T_RIGHTPAREN *

                     {default} reduce 78

State 522:
     (79) functionDecl ::= T_FUNCTION signature statementBlock *

                     {default} reduce 79

State 523:
     (80) classDecl ::= T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY *

                     {default} reduce 80

State 524:
     (85) classStatements ::= classStatements classStatement *

                     {default} reduce 85

State 525:
     (86) classStatement ::= classVarFlags classVar T_SEMI *

                     {default} reduce 86

State 526:
     (91) classVar ::= classVar T_COMMA T_VARIABLE T_ASSIGN staticScalar *

                     {default} reduce 91

State 527:
     (93) classVar ::= T_VARIABLE T_ASSIGN staticScalar *

                     {default} reduce 93

State 528:
     (87) classStatement ::= classConstantDecl T_SEMI *

                     {default} reduce 87

State 529:
     (94) classConstantDecl ::= classConstantDecl T_COMMA T_IDENTIFIER T_ASSIGN staticScalar *

                     {default} reduce 94

State 530:
     (88) classStatement ::= methodFlags T_FUNCTION signature methodBody *

                     {default} reduce 88

State 531:
    (108) methodBody ::= T_SEMI *

                     {default} reduce 108

State 532:
    (109) methodBody ::= statementBlock *

                     {default} reduce 109

State 533:
     (89) classStatement ::= methodFlags T_AND T_FUNCTION signature methodBody *

                     {default} reduce 89

State 534:
     (95) classConstantDecl ::= T_CONST T_IDENTIFIER T_ASSIGN staticScalar *

                     {default} reduce 95

State 535:
    (101) nonEmptyMemberFlags ::= nonEmptyMemberFlags memberFlag *

                     {default} reduce 101

State 536:
    (102) memberFlag ::= T_PUBLIC *

                     {default} reduce 102

State 537:
    (103) memberFlag ::= T_PROTECTED *

                     {default} reduce 103

State 538:
    (104) memberFlag ::= T_PRIVATE *

                     {default} reduce 104

State 539:
    (105) memberFlag ::= T_STATIC *

                     {default} reduce 105

State 540:
    (106) memberFlag ::= T_ABSTRACT *

                     {default} reduce 106

State 541:
    (107) memberFlag ::= T_FINAL *

                     {default} reduce 107

State 542:
     (98) classVarFlags ::= T_VAR *

                     {default} reduce 98

State 543:
    (100) nonEmptyMemberFlags ::= memberFlag *

                     {default} reduce 100

State 544:
    (117) idList ::= idList T_COMMA T_IDENTIFIER *

                     {default} reduce 117

State 545:
    (116) idList ::= T_IDENTIFIER *

                     {default} reduce 116

State 546:
    (111) classExtends ::= T_EXTENDS T_IDENTIFIER *

                     {default} reduce 111

State 547:
     (81) classDecl ::= T_FINAL T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY *

                     {default} reduce 81

State 548:
     (82) classDecl ::= T_ABSTRACT T_CLASS T_IDENTIFIER classExtends classImplements T_LEFTCURLY classStatements T_RIGHTCURLY *

                     {default} reduce 82

State 549:
     (83) classDecl ::= T_INTERFACE T_IDENTIFIER interfaceExtends T_LEFTCURLY classStatements T_RIGHTCURLY *

                     {default} reduce 83

State 550:
     (63) caseSeparator ::= T_COLON *

                     {default} reduce 63

State 551:
     (64) caseSeparator ::= T_SEMI *

                     {default} reduce 64

State 552:
     (57) switchCaseList ::= T_LEFTCURLY T_SEMI caseList T_RIGHTCURLY *

                     {default} reduce 57

State 553:
     (58) switchCaseList ::= T_COLON caseList T_ENDSWITCH *

                     {default} reduce 58

State 554:
     (59) switchCaseList ::= T_COLON T_SEMI caseList T_ENDSWITCH *

                     {default} reduce 59

State 555:
     (47) forEach ::= T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY var T_RIGHTPAREN statement *

                     {default} reduce 47

State 556:
     (49) forEach ::= T_FOREACH T_LEFTPAREN expr T_AS var T_ARROWKEY T_AND var T_RIGHTPAREN statement *

                     {default} reduce 49

State 557:
     (48) forEach ::= T_FOREACH T_LEFTPAREN expr T_AS T_AND var T_RIGHTPAREN statement *

                     {default} reduce 48

State 558:
     (42) elseSeries ::= T_ELSEIF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle *

                     {default} reduce 42

State 559:
     (43) elseSeries ::= T_ELSEIF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries *

                     {default} reduce 43

State 560:
     (44) ifBlock ::= T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSeries *

                     {default} reduce 44

State 561:
     (45) ifBlock ::= T_IF T_LEFTPAREN expr T_RIGHTPAREN statement elseSingle *

                     {default} reduce 45

----------------------------------------------------
Symbols:
    0: $:
    1: T_WHITESPACE
    2: T_OPEN_TAG
    3: T_CLOSE_TAG
    4: T_LEFTPAREN
    5: T_RIGHTPAREN
    6: T_LEFTCURLY
    7: T_RIGHTCURLY
    8: T_LEFTSQUARE
    9: T_RIGHTSQUARE
   10: T_COMMA
   11: T_SINGLELINE_COMMENT
   12: T_MULTILINE_COMMENT
   13: T_DOC_COMMENT
   14: T_INLINE_HTML
   15: T_WHILE
   16: T_ENDWHILE
   17: T_ELSE
   18: T_ELSEIF
   19: T_ARRAY
   20: T_ARROWKEY
   21: T_AND
   22: T_ASSIGN
   23: T_DQ_STRING
   24: T_BOOLEAN_AND
   25: T_BOOLEAN_AND_LIT
   26: T_BOOLEAN_OR
   27: T_BOOLEAN_OR_LIT
   28: T_BOOLEAN_XOR_LIT
   29: T_BOOLEAN_NOT
   30: T_IDENTIFIER
   31: T_GLOBAL
   32: T_FUNCTION
   33: T_EMPTY
   34: T_EQUAL
   35: T_NOT_EQUAL
   36: T_ISSET
   37: T_UNSET
   38: T_VAR
   39: T_CLASS
   40: T_CLASSDEREF
   41: T_FOREACH
   42: T_ENDFOREACH
   43: T_FOR
   44: T_ENDFOR
   45: T_AS
   46: T_RETURN
   47: T_DOT
   48: T_GREATER_THAN
   49: T_LESS_THAN
   50: T_GREATER_OR_EQUAL
   51: T_LESS_OR_EQUAL
   52: T_LIST
   53: T_EXTENDS
   54: T_PUBLIC
   55: T_PRIVATE
   56: T_PROTECTED
   57: T_INCLUDE
   58: T_INCLUDE_ONCE
   59: T_REQUIRE
   60: T_REQUIRE_ONCE
   61: T_IDENTICAL
   62: T_NOT_IDENTICAL
   63: T_QUESTION
   64: T_COLON
   65: T_DBL_COLON
   66: T_INC
   67: T_DEC
   68: T_EXIT
   69: T_MINUS
   70: T_PLUS
   71: T_DIV
   72: T_MOD
   73: T_MULT
   74: T_SWITCH
   75: T_ENDSWITCH
   76: T_CASE
   77: T_BREAK
   78: T_CONTINUE
   79: T_DEFAULT
   80: T_CLONE
   81: T_TRY
   82: T_CATCH
   83: T_THROW
   84: T_STATIC
   85: T_CONST
   86: T_AT
   87: T_INSTANCEOF
   88: T_PLUS_EQUAL
   89: T_MINUS_EQUAL
   90: T_EVAL
   91: T_SR_EQUAL
   92: T_SL_EQUAL
   93: T_XOR_EQUAL
   94: T_OR_EQUAL
   95: T_AND_EQUAL
   96: T_MOD_EQUAL
   97: T_CONCAT_EQUAL
   98: T_DIV_EQUAL
   99: T_MUL_EQUAL
  100: T_SR
  101: T_SL
  102: T_NAMESPACE
  103: T_INT_CAST
  104: T_FLOAT_CAST
  105: T_STRING_CAST
  106: T_UNICODE_CAST
  107: T_BINARY_CAST
  108: T_ARRAY_CAST
  109: T_OBJECT_CAST
  110: T_UNSET_CAST
  111: T_BOOL_CAST
  112: T_GOTO
  113: T_MAGIC_FILE
  114: T_MAGIC_LINE
  115: T_MAGIC_NS
  116: T_MAGIC_CLASS
  117: T_MAGIC_FUNCTION
  118: T_MAGIC_METHOD
  119: T_TICK
  120: T_TILDE
  121: T_PIPE
  122: T_CARET
  123: T_PRINT
  124: T_INTERFACE
  125: T_DQ_DONE
  126: T_DQ_DQ
  127: T_DQ_NEWLINE
  128: T_DQ_VARIABLE
  129: T_DQ_ESCAPE
  130: T_NEW
  131: T_ABSTRACT
  132: T_FINAL
  133: T_SEMI
  134: T_ECHO
  135: T_VARIABLE
  136: T_IF
  137: T_DO
  138: T_IMPLEMENTS
  139: T_DOLLAR
  140: T_SQ_STRING
  141: T_LNUMBER
  142: T_DNUMBER
  143: T_TRUE
  144: T_FALSE
  145: T_NULL
  146: error:
  147: module: T_LEFTPAREN T_LEFTCURLY T_INLINE_HTML T_WHILE T_ARRAY T_DQ_STRING T_BOOLEAN_NOT T_IDENTIFIER T_GLOBAL T_FUNCTION T_EMPTY T_ISSET T_UNSET T_CLASS T_FOREACH T_FOR T_RETURN T_LIST T_INCLUDE T_INCLUDE_ONCE T_REQUIRE T_REQUIRE_ONCE T_INC T_DEC T_EXIT T_MINUS T_PLUS T_SWITCH T_BREAK T_CONTINUE T_CLONE T_TRY T_THROW T_STATIC T_AT T_INT_CAST T_FLOAT_CAST T_STRING_CAST T_UNICODE_CAST T_BINARY_CAST T_ARRAY_CAST T_OBJECT_CAST T_UNSET_CAST T_BOOL_CAST T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD T_TILDE T_PRINT T_INTERFACE T_NEW T_ABSTRACT T_FINAL T_SEMI T_ECHO T_VARIABLE T_IF T_DO T_DOLLAR T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  148: statement_list: <lambda> T_LEFTPAREN T_LEFTCURLY T_INLINE_HTML T_WHILE T_ARRAY T_DQ_STRING T_BOOLEAN_NOT T_IDENTIFIER T_GLOBAL T_FUNCTION T_EMPTY T_ISSET T_UNSET T_CLASS T_FOREACH T_FOR T_RETURN T_LIST T_INCLUDE T_INCLUDE_ONCE T_REQUIRE T_REQUIRE_ONCE T_INC T_DEC T_EXIT T_MINUS T_PLUS T_SWITCH T_BREAK T_CONTINUE T_CLONE T_TRY T_THROW T_STATIC T_AT T_INT_CAST T_FLOAT_CAST T_STRING_CAST T_UNICODE_CAST T_BINARY_CAST T_ARRAY_CAST T_OBJECT_CAST T_UNSET_CAST T_BOOL_CAST T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD T_TILDE T_PRINT T_INTERFACE T_NEW T_ABSTRACT T_FINAL T_SEMI T_ECHO T_VARIABLE T_IF T_DO T_DOLLAR T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  149: statement: T_LEFTPAREN T_LEFTCURLY T_INLINE_HTML T_WHILE T_ARRAY T_DQ_STRING T_BOOLEAN_NOT T_IDENTIFIER T_GLOBAL T_FUNCTION T_EMPTY T_ISSET T_UNSET T_CLASS T_FOREACH T_FOR T_RETURN T_LIST T_INCLUDE T_INCLUDE_ONCE T_REQUIRE T_REQUIRE_ONCE T_INC T_DEC T_EXIT T_MINUS T_PLUS T_SWITCH T_BREAK T_CONTINUE T_CLONE T_TRY T_THROW T_STATIC T_AT T_INT_CAST T_FLOAT_CAST T_STRING_CAST T_UNICODE_CAST T_BINARY_CAST T_ARRAY_CAST T_OBJECT_CAST T_UNSET_CAST T_BOOL_CAST T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD T_TILDE T_PRINT T_INTERFACE T_NEW T_ABSTRACT T_FINAL T_SEMI T_ECHO T_VARIABLE T_IF T_DO T_DOLLAR T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  150: statementBlock: T_LEFTCURLY
  151: inlineHTML: T_INLINE_HTML
  152: functionDecl: T_FUNCTION
  153: classDecl: T_CLASS T_INTERFACE T_ABSTRACT T_FINAL
  154: ifBlock: T_IF
  155: forEach: T_FOREACH
  156: forStmt: T_FOR
  157: doStmt: T_DO
  158: whileStmt: T_WHILE
  159: switchStmt: T_SWITCH
  160: tryCatch: T_TRY
  161: staticDecl: T_STATIC
  162: echo: T_ECHO
  163: throw: T_THROW
  164: expr: T_LEFTPAREN T_ARRAY T_DQ_STRING T_BOOLEAN_NOT T_IDENTIFIER T_EMPTY T_ISSET T_UNSET T_LIST T_INCLUDE T_INCLUDE_ONCE T_REQUIRE T_REQUIRE_ONCE T_INC T_DEC T_EXIT T_MINUS T_PLUS T_CLONE T_AT T_INT_CAST T_FLOAT_CAST T_STRING_CAST T_UNICODE_CAST T_BINARY_CAST T_ARRAY_CAST T_OBJECT_CAST T_UNSET_CAST T_BOOL_CAST T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD T_TILDE T_PRINT T_NEW T_VARIABLE T_DOLLAR T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  165: return: T_RETURN
  166: break: T_BREAK
  167: continue: T_CONTINUE
  168: global: T_GLOBAL
  169: commaExprList: T_LEFTPAREN T_ARRAY T_DQ_STRING T_BOOLEAN_NOT T_IDENTIFIER T_EMPTY T_ISSET T_UNSET T_LIST T_INCLUDE T_INCLUDE_ONCE T_REQUIRE T_REQUIRE_ONCE T_INC T_DEC T_EXIT T_MINUS T_PLUS T_CLONE T_AT T_INT_CAST T_FLOAT_CAST T_STRING_CAST T_UNICODE_CAST T_BINARY_CAST T_ARRAY_CAST T_OBJECT_CAST T_UNSET_CAST T_BOOL_CAST T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD T_TILDE T_PRINT T_NEW T_VARIABLE T_DOLLAR T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  170: globalVarList: T_VARIABLE T_DOLLAR
  171: catch: T_CATCH
  172: moreCatches: <lambda> T_CATCH
  173: nonEmptyCatches: T_CATCH
  174: elseSingle: <lambda> T_ELSE
  175: elseSeries: T_ELSEIF
  176: var: T_IDENTIFIER T_VARIABLE T_DOLLAR
  177: forExpr: <lambda> T_LEFTPAREN T_ARRAY T_DQ_STRING T_BOOLEAN_NOT T_IDENTIFIER T_EMPTY T_ISSET T_UNSET T_LIST T_INCLUDE T_INCLUDE_ONCE T_REQUIRE T_REQUIRE_ONCE T_INC T_DEC T_EXIT T_MINUS T_PLUS T_CLONE T_AT T_INT_CAST T_FLOAT_CAST T_STRING_CAST T_UNICODE_CAST T_BINARY_CAST T_ARRAY_CAST T_OBJECT_CAST T_UNSET_CAST T_BOOL_CAST T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD T_TILDE T_PRINT T_NEW T_VARIABLE T_DOLLAR T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  178: switchCaseList: T_LEFTCURLY T_COLON
  179: caseList: <lambda> T_CASE T_DEFAULT
  180: caseSeparator: T_COLON T_SEMI
  181: staticVarList: T_VARIABLE
  182: staticScalar: T_ARRAY T_DQ_STRING T_IDENTIFIER T_MINUS T_PLUS T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  183: formalParam: T_ARRAY T_AND T_IDENTIFIER T_VARIABLE
  184: maybeHint: <lambda> T_ARRAY T_IDENTIFIER
  185: formalParamList: <lambda> T_ARRAY T_AND T_IDENTIFIER T_VARIABLE
  186: signature: T_AND T_IDENTIFIER
  187: classExtends: <lambda> T_EXTENDS
  188: classImplements: <lambda> T_IMPLEMENTS
  189: classStatements: <lambda> T_AND T_FUNCTION T_VAR T_PUBLIC T_PRIVATE T_PROTECTED T_STATIC T_CONST T_ABSTRACT T_FINAL
  190: interfaceExtends: <lambda> T_EXTENDS
  191: classStatement: T_AND T_FUNCTION T_VAR T_PUBLIC T_PRIVATE T_PROTECTED T_STATIC T_CONST T_ABSTRACT T_FINAL
  192: classVarFlags: T_VAR T_PUBLIC T_PRIVATE T_PROTECTED T_STATIC T_ABSTRACT T_FINAL
  193: classVar: T_VARIABLE
  194: classConstantDecl: T_CONST
  195: methodFlags: <lambda> T_PUBLIC T_PRIVATE T_PROTECTED T_STATIC T_ABSTRACT T_FINAL
  196: methodBody: T_LEFTCURLY T_SEMI
  197: nonEmptyMemberFlags: T_PUBLIC T_PRIVATE T_PROTECTED T_STATIC T_ABSTRACT T_FINAL
  198: memberFlag: T_PUBLIC T_PRIVATE T_PROTECTED T_STATIC T_ABSTRACT T_FINAL
  199: idList: T_IDENTIFIER
  200: baseExpr: T_LEFTPAREN T_ARRAY T_DQ_STRING T_BOOLEAN_NOT T_IDENTIFIER T_EMPTY T_ISSET T_UNSET T_LIST T_INCLUDE T_INCLUDE_ONCE T_REQUIRE T_REQUIRE_ONCE T_INC T_DEC T_EXIT T_MINUS T_PLUS T_CLONE T_AT T_INT_CAST T_FLOAT_CAST T_STRING_CAST T_UNICODE_CAST T_BINARY_CAST T_ARRAY_CAST T_OBJECT_CAST T_UNSET_CAST T_BOOL_CAST T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD T_TILDE T_PRINT T_NEW T_VARIABLE T_DOLLAR T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  201: assignment: T_IDENTIFIER T_VARIABLE T_DOLLAR
  202: opAssignment: T_IDENTIFIER T_VARIABLE T_DOLLAR
  203: listAssignment: T_LIST
  204: functionInvoke: T_IDENTIFIER T_VARIABLE T_DOLLAR
  205: constructorInvoke: T_NEW
  206: unaryOp: T_BOOLEAN_NOT T_MINUS T_PLUS T_TILDE
  207: binaryOp: T_LEFTPAREN T_ARRAY T_DQ_STRING T_BOOLEAN_NOT T_IDENTIFIER T_EMPTY T_ISSET T_UNSET T_LIST T_INCLUDE T_INCLUDE_ONCE T_REQUIRE T_REQUIRE_ONCE T_INC T_DEC T_EXIT T_MINUS T_PLUS T_CLONE T_AT T_INT_CAST T_FLOAT_CAST T_STRING_CAST T_UNICODE_CAST T_BINARY_CAST T_ARRAY_CAST T_OBJECT_CAST T_UNSET_CAST T_BOOL_CAST T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD T_TILDE T_PRINT T_NEW T_VARIABLE T_DOLLAR T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  208: builtin: T_EMPTY T_ISSET T_UNSET T_INCLUDE T_INCLUDE_ONCE T_REQUIRE T_REQUIRE_ONCE T_EXIT T_CLONE T_AT T_PRINT
  209: typeCast: T_INT_CAST T_FLOAT_CAST T_STRING_CAST T_UNICODE_CAST T_BINARY_CAST T_ARRAY_CAST T_OBJECT_CAST T_UNSET_CAST T_BOOL_CAST
  210: preOp: T_INC T_DEC
  211: postOp: T_IDENTIFIER T_VARIABLE T_DOLLAR
  212: conditionalExpr: T_LEFTPAREN T_ARRAY T_DQ_STRING T_BOOLEAN_NOT T_IDENTIFIER T_EMPTY T_ISSET T_UNSET T_LIST T_INCLUDE T_INCLUDE_ONCE T_REQUIRE T_REQUIRE_ONCE T_INC T_DEC T_EXIT T_MINUS T_PLUS T_CLONE T_AT T_INT_CAST T_FLOAT_CAST T_STRING_CAST T_UNICODE_CAST T_BINARY_CAST T_ARRAY_CAST T_OBJECT_CAST T_UNSET_CAST T_BOOL_CAST T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD T_TILDE T_PRINT T_NEW T_VARIABLE T_DOLLAR T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  213: scalar: T_DQ_STRING T_IDENTIFIER T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  214: literalArray: T_ARRAY
  215: rVar: T_IDENTIFIER T_VARIABLE T_DOLLAR
  216: commaVarList: T_IDENTIFIER T_VARIABLE T_DOLLAR
  217: globalVar: T_VARIABLE T_DOLLAR
  218: literal: T_DQ_STRING T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  219: literalMagic: T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD
  220: arrayItemList: <lambda> T_LEFTPAREN T_ARRAY T_AND T_DQ_STRING T_BOOLEAN_NOT T_IDENTIFIER T_EMPTY T_ISSET T_UNSET T_LIST T_INCLUDE T_INCLUDE_ONCE T_REQUIRE T_REQUIRE_ONCE T_INC T_DEC T_EXIT T_MINUS T_PLUS T_CLONE T_AT T_INT_CAST T_FLOAT_CAST T_STRING_CAST T_UNICODE_CAST T_BINARY_CAST T_ARRAY_CAST T_OBJECT_CAST T_UNSET_CAST T_BOOL_CAST T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD T_TILDE T_PRINT T_NEW T_VARIABLE T_DOLLAR T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  221: arrayItems: T_LEFTPAREN T_ARRAY T_AND T_DQ_STRING T_BOOLEAN_NOT T_IDENTIFIER T_EMPTY T_ISSET T_UNSET T_LIST T_INCLUDE T_INCLUDE_ONCE T_REQUIRE T_REQUIRE_ONCE T_INC T_DEC T_EXIT T_MINUS T_PLUS T_CLONE T_AT T_INT_CAST T_FLOAT_CAST T_STRING_CAST T_UNICODE_CAST T_BINARY_CAST T_ARRAY_CAST T_OBJECT_CAST T_UNSET_CAST T_BOOL_CAST T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD T_TILDE T_PRINT T_NEW T_VARIABLE T_DOLLAR T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  222: maybeComma: <lambda> T_COMMA
  223: maybeDynamicID: T_IDENTIFIER T_VARIABLE T_DOLLAR
  224: listAssignmentList: T_IDENTIFIER T_LIST T_VARIABLE T_DOLLAR
  225: listElement: <lambda> T_IDENTIFIER T_LIST T_VARIABLE T_DOLLAR
  226: varWithFunCalls: T_IDENTIFIER T_VARIABLE T_DOLLAR
  227: varPropertyList: T_CLASSDEREF
  228: varProperty: T_CLASSDEREF
  229: objProperty: T_IDENTIFIER T_VARIABLE T_DOLLAR
  230: maybeMethodInvoke: <lambda> T_LEFTPAREN
  231: argList: <lambda> T_LEFTPAREN T_ARRAY T_DQ_STRING T_BOOLEAN_NOT T_IDENTIFIER T_EMPTY T_ISSET T_UNSET T_LIST T_INCLUDE T_INCLUDE_ONCE T_REQUIRE T_REQUIRE_ONCE T_INC T_DEC T_EXIT T_MINUS T_PLUS T_CLONE T_AT T_INT_CAST T_FLOAT_CAST T_STRING_CAST T_UNICODE_CAST T_BINARY_CAST T_ARRAY_CAST T_OBJECT_CAST T_UNSET_CAST T_BOOL_CAST T_MAGIC_FILE T_MAGIC_LINE T_MAGIC_NS T_MAGIC_CLASS T_MAGIC_FUNCTION T_MAGIC_METHOD T_TILDE T_PRINT T_NEW T_VARIABLE T_DOLLAR T_SQ_STRING T_LNUMBER T_DNUMBER T_TRUE T_FALSE T_NULL
  232: varNoObjects: T_VARIABLE T_DOLLAR
  233: refVar: T_VARIABLE
  234: varVar: T_DOLLAR
  235: staticMember: T_IDENTIFIER
  236: baseVar: T_IDENTIFIER T_VARIABLE T_DOLLAR
  237: arrayIndices: T_LEFTCURLY T_LEFTSQUARE
  238: literalID: T_IDENTIFIER
